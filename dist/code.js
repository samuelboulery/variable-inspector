const V=`<!DOCTYPE html>
<html>

<head>
  <meta charset="UTF-8" />
</head>

<body>
  <div id="app"></div>
  <div class="resize-handle">
    <svg width="24" height="24" viewBox="0 0 24 24" fill="none" xmlns="http://www.w3.org/2000/svg">
      <path
        d="M17.5 6.25C17.5 5.55964 18.0596 5 18.75 5C19.4404 5 20 5.55964 20 6.25C20 13.8439 13.8439 20 6.25 20C5.55964 20 5 19.4404 5 18.75C5 18.0596 5.55964 17.5 6.25 17.5C12.4632 17.5 17.5 12.4632 17.5 6.25Z"
        fill="currentColor" />
    </svg>
  </div>
  <script>
    // Gestion du redimensionnement
    const resizeHandle = document.querySelector('.resize-handle');
    let isResizing = false;
    let startX, startY, startWidth, startHeight;

    resizeHandle.addEventListener('mousedown', (e) => {
      isResizing = true;
      startX = e.clientX;
      startY = e.clientY;
      startWidth = window.innerWidth;
      startHeight = window.innerHeight;
      e.preventDefault();
    });

    document.addEventListener('mousemove', (e) => {
      if (!isResizing) return;

      const width = Math.max(300, startWidth + (e.clientX - startX));
      const height = Math.max(200, startHeight + (e.clientY - startY));

      // Envoie le message de redimensionnement au plugin
      parent.postMessage({
        pluginMessage: {
          type: 'resize',
          width: width,
          height: height
        }
      }, '*');
    });

    document.addEventListener('mouseup', () => {
      isResizing = false;
    });

    // Empêche la sélection de texte pendant le redimensionnement
    document.addEventListener('selectstart', (e) => {
      if (isResizing) {
        e.preventDefault();
      }
    });

    function formatRGBA(color) {
      if (!color) return '#ccc'; // Couleur par défaut si non définie
      const r = Math.round(color.r * 255);
      const g = Math.round(color.g * 255);
      const b = Math.round(color.b * 255);
      const a = color.a === undefined ? 1 : color.a;
      return \`rgba(\${r}, \${g}, \${b}, \${a})\`;
    }

    // Icônes SVG pour les types de variables
    const variableTypeIcons = {
      "COLOR": '<svg viewBox="0 0 24 24" fill="none"><path d="M7.312 6.803C8.64423 5.60135 10.387 4.9571 12.1805 5.00325C13.974 5.0494 15.6813 5.78243 16.95 7.051L17.23 7.349C18.4495 8.72011 19.0819 10.5153 18.991 12.348L18.962 12.728C18.807 14.222 17.446 15.002 16.242 15.002H13.5C13.3674 15.002 13.2402 15.0547 13.1464 15.1484C13.0527 15.2422 13 15.3694 13 15.502V16C13 16.82 12.66 17.603 12.08 18.127C11.478 18.669 10.612 18.927 9.71 18.617C8.589 18.2286 7.58506 17.5617 6.79244 16.6789C5.99981 15.7962 5.44448 14.7265 5.17857 13.5703C4.91266 12.4141 4.94489 11.2093 5.27224 10.0689C5.59958 8.92858 6.21131 7.89012 7.05 7.051L7.312 6.803ZM16.243 7.759C15.1178 6.63387 13.5917 6.00178 12.0005 6.00178C10.4093 6.00178 8.88321 6.63387 7.758 7.759L7.545 7.982C6.88107 8.71757 6.40965 9.60613 6.17285 10.5683C5.93604 11.5305 5.94122 12.5363 6.18793 13.496C6.43464 14.4557 6.91519 15.3394 7.58667 16.0681C8.25814 16.7968 9.09964 17.3478 10.036 17.672C11.015 18.01 11.885 17.216 11.989 16.205L12 16.001V15.501C12 14.726 12.59 14.086 13.346 14.009L13.5 14.002H16.242L16.401 13.995C17.134 13.938 17.792 13.482 17.944 12.778L17.968 12.624C18.0547 11.7945 17.9675 10.956 17.712 10.1621C17.4565 9.36816 17.0383 8.63623 16.484 8.013L16.243 7.759ZM9 12C9.13132 12.0001 9.26135 12.026 9.38265 12.0763C9.50395 12.1266 9.61415 12.2003 9.70696 12.2932C9.79978 12.3862 9.87338 12.4964 9.92357 12.6178C9.97377 12.7391 9.99957 12.8692 9.9995 13.0005C9.99944 13.1318 9.97351 13.2618 9.92319 13.3831C9.87288 13.5044 9.79916 13.6146 9.70626 13.7075C9.61335 13.8003 9.50308 13.8739 9.38172 13.9241C9.26037 13.9743 9.13032 14.0001 8.999 14C8.73379 13.9999 8.47949 13.8944 8.29204 13.7068C8.1046 13.5191 7.99937 13.2647 7.9995 12.9995C7.99964 12.7343 8.10512 12.48 8.29275 12.2925C8.48038 12.1051 8.73479 11.9999 9 12ZM15 10C15.1315 10.0001 15.2616 10.0262 15.383 10.0766C15.5044 10.127 15.6147 10.2008 15.7075 10.2939C15.8004 10.3869 15.874 10.4974 15.9242 10.6189C15.9744 10.7404 16.0001 10.8705 16 11.002C15.9999 11.1335 15.9739 11.2636 15.9234 11.385C15.873 11.5064 15.7992 11.6167 15.7061 11.7095C15.6131 11.8024 15.5026 11.876 15.3811 11.9262C15.2596 11.9764 15.1295 12.0021 14.998 12.002C14.7325 12.0017 14.478 11.896 14.2905 11.7081C14.1029 11.5202 13.9977 11.2655 13.998 11C13.9983 10.7345 14.104 10.48 14.2919 10.2925C14.4798 10.1049 14.7345 9.99973 15 10ZM10 9C10.2652 9 10.5196 9.10536 10.7071 9.29289C10.8946 9.48043 11 9.73478 11 10C11 10.2652 10.8946 10.5196 10.7071 10.7071C10.5196 10.8946 10.2652 11 10 11C9.73479 11 9.48043 10.8946 9.2929 10.7071C9.10536 10.5196 9 10.2652 9 10C9 9.73478 9.10536 9.48043 9.2929 9.29289C9.48043 9.10536 9.73479 9 10 9ZM13 8C13.2655 8 13.5201 8.10546 13.7078 8.29318C13.8955 8.48091 14.001 8.73552 14.001 9.001C14.001 9.26648 13.8955 9.52109 13.7078 9.70881C13.5201 9.89654 13.2655 10.002 13 10.002C12.7347 10.002 12.4802 9.89659 12.2925 9.70896C12.1049 9.52133 11.9995 9.26685 11.9995 9.0015C11.9995 8.73615 12.1049 8.48167 12.2925 8.29404C12.4802 8.10641 12.7347 8.001 13 8.001" fill="currentColor" /></svg>',
      "STRING": '<svg viewBox="0 0 24 24" fill="none"><path fill-rule="evenodd" clip-rule="evenodd" d="M8 7H16C16.2652 7 16.5196 7.10536 16.7071 7.29289C16.8946 7.48043 17 7.73478 17 8V16C17 16.2652 16.8946 16.5196 16.7071 16.7071C16.5196 16.8946 16.2652 17 16 17H8C7.73478 17 7.48043 16.8946 7.29289 16.7071C7.10536 16.5196 7 16.2652 7 16V8C7 7.73478 7.10536 7.48043 7.29289 7.29289C7.48043 7.10536 7.73478 7 8 7ZM6 8C6 7.46957 6.21071 6.96086 6.58579 6.58579C6.96086 6.21071 7.46957 6 8 6H16C16.5304 6 17.0391 6.21071 17.4142 6.58579C17.7893 6.96086 18 7.46957 18 8V16C18 16.5304 17.7893 17.0391 17.4142 17.4142C17.0391 17.7893 16.5304 18 16 18H8C7.46957 18 6.96086 17.7893 6.58579 17.4142C6.21071 17.0391 6 16.5304 6 16V8ZM9.5 9C9.36739 9 9.24021 9.05268 9.14645 9.14645C9.05268 9.24021 9 9.36739 9 9.5V10.5C9 10.6326 9.05268 10.7598 9.14645 10.8536C9.24021 10.9473 9.36739 11 9.5 11C9.63261 11 9.75979 10.9473 9.85355 10.8536C9.94732 10.7598 10 10.6326 10 10.5V10H11.5V14H11C10.8674 14 10.7402 14.0527 10.6464 14.1464C10.5527 14.2402 10.5 14.3674 10.5 14.5C10.5 14.6326 10.5527 14.7598 10.6464 14.8536C10.7402 14.9473 10.8674 15 11 15H13C13.1326 15 13.2598 14.9473 13.3536 14.8536C13.4473 14.7598 13.5 14.6326 13.5 14.5C13.5 14.3674 13.4473 14.2402 13.3536 14.1464C13.2598 14.0527 13.1326 14 13 14H12.5V10H14V10.5C14 10.6326 14.0527 10.7598 14.1464 10.8536C14.2402 10.9473 14.3674 11 14.5 11C14.6326 11 14.7598 10.9473 14.8536 10.8536C14.9473 10.7598 15 10.6326 15 10.5V9.5C15 9.36739 14.9473 9.24021 14.8536 9.14645C14.7598 9.05268 14.6326 9 14.5 9H9.5Z" fill="currentColor"/></svg>',
      "FLOAT": '<svg viewBox="0 0 24 24" fill="none"><path fill-rule="evenodd" clip-rule="evenodd" d="M11.498 9.55C11.5113 9.41806 11.4716 9.28625 11.3876 9.18357C11.3037 9.08089 11.1824 9.01576 11.0505 9.0025C10.9186 8.98924 10.7867 9.02894 10.6841 9.11286C10.5814 9.19678 10.5163 9.31806 10.503 9.45L10.447 10H9.5C9.36739 10 9.24021 10.0527 9.14645 10.1464C9.05268 10.2402 9 10.3674 9 10.5C9 10.6326 9.05268 10.7598 9.14645 10.8536C9.24021 10.9473 9.36739 11 9.5 11H10.348L10.148 13H9.5C9.36739 13 9.24021 13.0527 9.14645 13.1464C9.05268 13.2402 9 13.3674 9 13.5C9 13.6326 9.05268 13.7598 9.14645 13.8536C9.24021 13.9473 9.36739 14 9.5 14H10.047L10.002 14.45C9.98874 14.5819 10.0284 14.7138 10.1124 14.8164C10.1963 14.9191 10.3176 14.9842 10.4495 14.9975C10.5814 15.0108 10.7133 14.9711 10.8159 14.8871C10.9186 14.8032 10.9837 14.6819 10.997 14.55L11.053 14H12.547L12.502 14.45C12.4954 14.5153 12.5018 14.5813 12.5207 14.6442C12.5397 14.7071 12.5708 14.7656 12.6124 14.8164C12.6539 14.8673 12.7051 14.9094 12.7629 14.9405C12.8208 14.9716 12.8842 14.9909 12.9495 14.9975C13.0148 15.0041 13.0808 14.9977 13.1437 14.9788C13.2066 14.9598 13.2651 14.9287 13.3159 14.8871C13.3668 14.8456 13.4089 14.7944 13.44 14.7366C13.4711 14.6787 13.4904 14.6153 13.497 14.55L13.553 14H14.5C14.6326 14 14.7598 13.9473 14.8536 13.8536C14.9473 13.7598 15 13.6326 15 13.5C15 13.3674 14.9473 13.2402 14.8536 13.1464C14.7598 13.0527 14.6326 13 14.5 13H13.652L13.852 11H14.5C14.6326 11 14.7598 10.9473 14.8536 10.8536C14.9473 10.7598 15 10.6326 15 10.5C15 10.3674 14.9473 10.2402 14.8536 10.1464C14.7598 10.0527 14.6326 10 14.5 10H13.953L13.998 9.55C14.0046 9.48467 13.9982 9.41868 13.9793 9.35581C13.9603 9.29294 13.9292 9.23441 13.8876 9.18357C13.8461 9.13273 13.7949 9.09057 13.7371 9.05951C13.6792 9.02844 13.6158 9.00907 13.5505 9.0025C13.4852 8.99593 13.4192 9.0023 13.3563 9.02124C13.2934 9.04017 13.2349 9.07131 13.1841 9.11286C13.1332 9.15441 13.0911 9.20557 13.06 9.26342C13.0289 9.32127 13.0096 9.38467 13.003 9.45L12.947 10H11.453L11.498 9.55ZM11.153 13L11.353 11H12.848L12.648 13H11.153Z" fill="currentColor"/><path fill-rule="evenodd" clip-rule="evenodd" d="M8 6C7.46957 6 6.96086 6.21071 6.58579 6.58579C6.21071 6.96086 6 7.46957 6 8V16C6 16.5304 6.21071 17.0391 6.58579 17.4142C6.96086 17.7893 7.46957 18 8 18H16C16.5304 18 17.0391 17.7893 17.4142 17.4142C17.7893 17.0391 18 16.5304 18 16V8C18 7.46957 17.7893 6.96086 17.4142 6.58579C17.0391 6.21071 16.5304 6 16 6H8ZM7 8C7 7.73478 7.10536 7.48043 7.29289 7.29289C7.48043 7.10536 7.73478 7 8 7H16C16.2652 7 16.5196 7.10536 16.7071 7.29289C16.8946 7.48043 17 7.73478 17 8V16C17 16.2652 16.8946 16.5196 16.7071 16.7071C16.5196 16.8946 16.2652 17 16 17H8C7.73478 17 7.48043 16.8946 7.29289 16.7071C7.10536 16.5196 7 16.2652 7 16V8Z" fill="currentColor"/></svg>',
      // Ajouter BOOLEAN au cas où
      "BOOLEAN": '<svg viewBox="0 0 24 24" fill="none"><path fill-rule="evenodd" clip-rule="evenodd" d="M8 6C7.46957 6 6.96086 6.21071 6.58579 6.58579C6.21071 6.96086 6 7.46957 6 8V16C6 16.5304 6.21071 17.0391 6.58579 17.4142C6.96086 17.7893 7.46957 18 8 18H16C16.5304 18 17.0391 17.7893 17.4142 17.4142C17.7893 17.0391 18 16.5304 18 16V8C18 7.46957 17.7893 6.96086 17.4142 6.58579C17.0391 6.21071 16.5304 6 16 6H8C7.73478 6 7.48043 6.10536 7.29289 6.29289C7.10536 6.48043 7 6.73478 7 7V15C7 15.2652 7.10536 15.5196 7.29289 15.7071C7.48043 15.8946 7.73478 16 8 16ZM12 15C12.2652 15 12.5196 15.1054 12.7071 15.2929C12.8946 15.4804 13 15.7348 13 16C13 16.2652 12.8946 16.5196 12.7071 16.7071C12.5196 16.8946 12.2652 17 12 17C11.7348 17 11.4804 16.8946 11.2929 16.7071C11.1054 16.5196 11 16.2652 11 16C11 15.7348 11.1054 15.4804 11.2929 15.2929C11.4804 15.1054 11.7348 15 12 15ZM12 16.5714C13.2124 16.5714 14.3752 16.0898 15.2325 15.2325C16.0898 14.3752 16.5714 13.2124 16.5714 12C16.5714 10.7876 16.0898 9.62482 15.2325 8.76751C14.3752 7.9102 13.2124 7.42857 12 7.42857C10.7876 7.42857 9.62482 7.9102 8.76751 8.76751C7.9102 9.62482 7.42857 10.7876 7.42857 12C7.42857 13.2124 7.9102 14.3752 8.76751 15.2325C9.62482 16.0898 10.7876 16.5714 12 16.5714ZM12 16.6719C10.7611 16.6719 9.57333 16.1788 8.69727 15.3027C7.8212 14.4267 7.32813 13.2389 7.32812 12C7.32813 10.7611 7.8212 9.57333 8.69727 8.69727C9.57333 7.8212 10.7611 7.32813 12 7.32812C13.2389 7.32813 14.4267 7.8212 15.3027 8.69727C16.1788 9.57333 16.6719 10.7611 16.6719 12C16.6719 13.2389 16.1788 14.4267 15.3027 15.3027C14.4267 16.1788 13.2389 16.6719 12 16.6719ZM12 16.7727C10.7876 16.7727 9.62482 16.2796 8.76751 15.4223C7.9102 14.565 7.42857 13.3772 7.42857 12C7.42857 10.7876 7.9102 9.62482 8.76751 8.76751C9.62482 7.9102 10.7876 7.42857 12 7.42857C13.2124 7.42857 14.3752 7.9102 15.2325 8.76751C16.0898 9.62482 16.5714 10.7876 16.5714 12C16.5714 13.2124 16.0898 14.3752 15.2325 15.2325C14.3752 16.0898 13.2124 16.5714 12 16.7727ZM12 16.8732C10.7876 16.8732 9.62482 16.3801 8.76751 15.5228C7.9102 14.6655 7.42857 13.4777 7.42857 12C7.42857 10.7876 7.9102 9.62482 8.76751 8.76751C9.62482 7.9102 10.7876 7.42857 12 7.42857C13.2124 7.42857 14.3752 7.9102 15.2325 8.76751C16.0898 9.62482 16.5714 10.7876 16.5714 12C16.5714 13.2124 16.0898 14.3752 15.2325 15.2325C14.3752 16.0898 13.2124 16.5714 12 16.8732ZM12 16.9738C10.7876 16.9738 9.62482 16.4807 8.76751 15.6234C7.9102 14.7661 7.42857 13.5783 7.42857 12C7.42857 10.7876 7.9102 9.62482 8.76751 8.76751C9.62482 7.9102 10.7876 7.42857 12 7.42857C13.2124 7.42857 14.3752 7.9102 15.2325 8.76751C16.0898 9.62482 16.5714 10.7876 16.5714 12C16.5714 13.2124 16.0898 14.3752 15.2325 15.2325C14.3752 16.0898 13.2124 16.5714 12 16.9738ZM12 17.0744C10.7876 17.0744 9.62482 16.5813 8.76751 15.724C7.9102 14.8667 7.42857 13.6789 7.42857 12C7.42857 10.7876 7.9102 9.62482 8.76751 8.76751C9.62482 7.9102 10.7876 7.42857 12 7.42857C13.2124 7.42857 14.3752 7.9102 15.2325 8.76751C16.0898 9.62482 16.5714 10.7876 16.5714 12C16.5714 13.2124 16.0898 14.3752 15.2325 15.2325C14.3752 16.0898 13.2124 16.5714 12 17.0744ZM12 17.175C10.7876 17.175 9.62482 16.6819 8.76751 15.8246C7.9102 14.9673 7.42857 13.7795 7.42857 12C7.42857 10.7876 7.9102 9.62482 8.76751 8.76751C9.62482 7.9102 10.7876 7.42857 12 7.42857C13.2124 7.42857 14.3752 7.9102 15.2325 8.76751C16.0898 9.62482 16.5714 10.7876 16.5714 12C16.5714 13.2124 16.0898 14.3752 15.2325 15.2325C14.3752 16.0898 13.2124 16.5714 12 17.175ZM12 17.2756C10.7876 17.2756 9.62482 16.7825 8.76751 15.9252C7.9102 15.0679 7.42857 13.8801 7.42857 12C7.42857 10.7876 7.9102 9.62482 8.76751 8.76751C9.62482 7.9102 10.7876 7.42857 12 7.42857C13.2124 7.42857 14.3752 7.9102 15.2325 8.76751C16.0898 9.62482 16.5714 10.7876 16.5714 12C16.5714 13.2124 16.0898 14.3752 15.2325 15.2325C14.3752 16.0898 13.2124 16.5714 12 17.2756ZM12 17.3762C10.7876 17.3762 9.62482 16.8831 8.76751 16.0258C7.9102 15.1685 7.42857 13.9807 7.42857 12C7.42857 10.7876 7.9102 9.62482 8.76751 8.76751C9.62482 7.9102 10.7876 7.42857 12 7.42857C13.2124 7.42857 14.3752 7.9102 15.2325 8.76751C16.0898 9.62482 16.5714 10.7876 16.5714 12C16.5714 13.2124 16.0898 14.3752 15.2325 15.2325C14.3752 16.0898 13.2124 16.5714 12 17.3762ZM12 17.4768C10.7876 17.4768 9.62482 16.9837 8.76751 16.1264C7.9102 15.2691 7.42857 14.0813 7.42857 12C7.42857 10.7876 7.9102 9.62482 8.76751 8.76751C9.62482 7.9102 10.7876 7.42857 12 7.42857C13.2124 7.42857 14.3752 7.9102 15.2325 8.76751C16.0898 9.62482 16.5714 10.7876 16.5714 12C16.5714 13.2124 16.0898 14.3752 15.2325 15.2325C14.3752 16.0898 13.2124 16.5714 12 17.4768ZM12 17.5774C10.7876 17.5774 9.62482 17.0843 8.76751 16.227C7.9102 15.3697 7.42857 14.1819 7.42857 12C7.42857 10.7876 7.9102 9.62482 8.76751 8.76751C9.62482 7.9102 10.7876 7.42857 12 7.42857C13.2124 7.42857 14.3752 7.9102 15.2325 8.76751C16.0898 9.62482 16.5714 10.7876 16.5714 12C16.5714 13.2124 16.0898 14.3752 15.2325 15.2325C14.3752 16.0898 13.2124 16.5714 12 17.5774ZM12 17.678C10.7876 17.678 9.62482 17.1849 8.76751 16.3276C7.9102 15.4703 7.42857 14.2825 7.42857 12C7.42857 10.7876 7.9102 9.62482 8.76751 8.76751C9.62482 7.9102 10.7876 7.42857 12 7.42857C13.2124 7.42857 14.3752 7.9102 15.2325 8.76751C16.0898 9.62482 16.5714 10.7876 16.5714 12C16.5714 13.2124 16.0898 14.3752 15.2325 15.2325C14.3752 16.0898 13.2124 16.5714 12 17.678ZM12 17.7786C10.7876 17.7786 9.62482 17.2855 8.76751 16.4282C7.9102 15.5709 7.42857 14.3831 7.42857 12C7.42857 10.7876 7.9102 9.62482 8.76751 8.76751C9.62482 7.9102 10.7876 7.42857 12 7.42857C13.2124 7.42857 14.3752 7.9102 15.2325 8.76751C16.0898 9.62482 16.5714 10.7876 16.5714 12C16.5714 13.2124 16.0898 14.3752 15.2325 15.2325C14.3752 16.0898 13.2124 16.5714 12 17.7786ZM12 17.8792C10.7876 17.8792 9.62482 17.3861 8.76751 16.5288C7.9102 15.6715 7.42857 14.4837 7.42857 12C7.42857 10.7876 7.9102 9.62482 8.76751 8.76751C9.62482 7.9102 10.7876 7.42857 12 7.42857C13.2124 7.42857 14.3752 7.9102 15.2325 8.76751C16.0898 9.62482 16.5714 10.7876 16.5714 12C16.5714 13.2124 16.0898 14.3752 15.2325 15.2325C14.3752 16.0898 13.2124 16.5714 12 17.8792ZM12 17.9798C10.7876 17.9798 9.62482 17.4867 8.76751 16.6294C7.9102 15.7721 7.42857 14.5843 7.42857 12C7.42857 10.7876 7.9102 9.62482 8.76751 8.76751C9.62482 7.9102 10.7876 7.42857 12 7.42857C13.2124 7.42857 14.3752 7.9102 15.2325 8.76751C16.0898 9.62482 16.5714 10.7876 16.5714 12C16.5714 13.2124 16.0898 14.3752 15.2325 15.2325C14.3752 16.0898 13.2124 16.5714 12 17.9798ZM12 18.0804C10.7876 18.0804 9.62482 17.5873 8.76751 16.73C7.9102 15.8727 7.42857 14.6849 7.42857 12C7.42857 10.7876 7.9102 9.62482 8.76751 8.76751C9.62482 7.9102 10.7876 7.42857 12 7.42857C13.2124 7.42857 14.3752 7.9102 15.2325 8.76751C16.0898 9.62482 16.5714 10.7876 16.5714 12C16.5714 13.2124 16.0898 14.3752 15.2325 15.2325C14.3752 16.0898 13.2124 16.5714 12 18.0804ZM12 18.181C10.7876 18.181 9.62482 17.6879 8.76751 16.8306C7.9102 15.9733 7.42857 14.7855 7.42857 12C7.42857 10.7876 7.9102 9.62482 8.76751 8.76751C9.62482 7.9102 10.7876 7.42857 12 7.42857C13.2124 7.42857 14.3752 7.9102 15.2325 8.76751C16.0898 9.62482 16.5714 10.7876 16.5714 12C16.5714 13.2124 16.0898 14.3752 15.2325 15.2325C14.3752 16.0898 13.2124 16.5714 12 18.181ZM12 18.2816C10.7876 18.2816 9.62482 17.7885 8.76751 16.9312C7.9102 16.0739 7.42857 14.8861 7.42857 12C7.42857 10.7876 7.9102 9.62482 8.76751 8.76751C9.62482 7.9102 10.7876 7.42857 12 7.42857C13.2124 7.42857 14.3752 7.9102 15.2325 8.76751C16.0898 9.62482 16.5714 10.7876 16.5714 12C16.5714 13.2124 16.0898 14.3752 15.2325 15.2325C14.3752 16.0898 13.2124 16.5714 12 18.2816ZM12 18.3822C10.7876 18.3822 9.62482 17.8891 8.76751 17.0318C7.9102 16.1745 7.42857 14.9867 7.42857 12C7.42857 10.7876 7.9102 9.62482 8.76751 8.76751C9.62482 7.9102 10.7876 7.42857 12 7.42857C13.2124 7.42857 14.3752 7.9102 15.2325 8.76751C16.0898 9.62482 16.5714 10.7876 16.5714 12C16.5714 13.2124 16.0898 14.3752 15.2325 15.2325C14.3752 16.0898 13.2124 16.5714 12 18.3822ZM12 18.4828C10.7876 18.4828 9.62482 17.9897 8.76751 17.1324C7.9102 16.2751 7.42857 15.0873 7.42857 12C7.42857 10.7876 7.9102 9.62482 8.76751 8.76751C9.62482 7.9102 10.7876 7.42857 12 7.42857C13.2124 7.42857 14.3752 7.9102 15.2325 8.76751C16.0898 9.62482 16.5714 10.7876 16.5714 12C16.5714 13.2124 16.0898 14.3752 15.2325 15.2325C14.3752 16.0898 13.2124 16.5714 12 18.4828ZM12 18.5834C10.7876 18.5834 9.62482 18.0903 8.76751 17.233C7.9102 16.3757 7.42857 15.1879 7.42857 12C7.42857 10.7876 7.9102 9.62482 8.76751 8.76751C9.62482 7.9102 10.7876 7.42857 12 7.42857C13.2124 7.42857 14.3752 7.9102 15.2325 8.76751C16.0898 9.62482 16.5714 10.7876 16.5714 12C16.5714 13.2124 16.0898 14.3752 15.2325 15.2325C14.3752 16.0898 13.2124 16.5714 12 18.5834ZM12 18.684C10.7876 18.684 9.62482 18.1909 8.76751 17.3336C7.9102 16.4763 7.42857 15.2885 7.42857 12C7.42857 10.7876 7.9102 9.62482 8.76751 8.76751C9.62482 7.9102 10.7876 7.42857 12 7.42857C13.2124 7.42857 14.3752 7.9102 15.2325 8.76751C16.0898 9.62482 16.5714 10.7876 16.5714 12C16.5714 13.2124 16.0898 14.3752 15.2325 15.2325C14.3752 16.0898 13.2124 16.5714 12 18.684ZM12 18.7846C10.7876 18.7846 9.62482 18.2915 8.76751 17.4342C7.9102 16.5769 7.42857 15.3891 7.42857 12C7.42857 10.7876 7.9102 9.62482 8.76751 8.76751C9.62482 7.9102 10.7876 7.42857 12 7.42857C13.2124 7.42857 14.3752 7.9102 15.2325 8.76751C16.0898 9.62482 16.5714 10.7876 16.5714 12C16.5714 13.2124 16.0898 14.3752 15.2325 15.2325C14.3752 16.0898 13.2124 16.5714 12 18.7846ZM12 18.8852C10.7876 18.8852 9.62482 18.3921 8.76751 17.5348C7.9102 16.6775 7.42857 15.4897 7.42857 12C7.42857 10.7876 7.9102 9.62482 8.76751 8.76751C9.62482 7.9102 10.7876 7.42857 12 7.42857C13.2124 7.42857 14.3752 7.9102 15.2325 8.76751C16.0898 9.62482 16.5714 10.7876 16.5714 12C16.5714 13.2124 16.0898 14.3752 15.2325 15.2325C14.3752 16.0898 13.2124 16.5714 12 18.8852ZM12 18.9858C10.7876 18.9858 9.62482 18.4927 8.76751 17.6354C7.9102 16.7781 7.42857 15.5903 7.42857 12C7.42857 10.7876 7.9102 9.62482 8.76751 8.76751C9.62482 7.9102 10.7876 7.42857 12 7.42857C13.2124 7.42857 14.3752 7.9102 15.2325 8.76751C16.0898 9.62482 16.5714 10.7876 16.5714 12C16.5714 13.2124 16.0898 14.3752 15.2325 15.2325C14.3752 16.0898 13.2124 16.5714 12 18.9858ZM12 19.0864C10.7876 19.0864 9.62482 18.5933 8.76751 17.736C7.9102 16.8787 7.42857 15.6909 7.42857 12C7.42857 10.7876 7.9102 9.62482 8.76751 8.76751C9.62482 7.9102 10.7876 7.42857 12 7.42857C13.2124 7.42857 14.3752 7.9102 15.2325 8.76751C16.0898 9.62482 16.5714 10.7876 16.5714 12C16.5714 13.2124 16.0898 14.3752 15.2325 15.2325C14.3752 16.0898 13.2124 16.5714 12 19.0864ZM12 19.187C10.7876 19.187 9.62482 18.6939 8.76751 17.8366C7.9102 16.9793 7.42857 15.7915 7.42857 12C7.42857 10.7876 7.9102 9.62482 8.76751 8.76751C9.62482 7.9102 10.7876 7.42857 12 7.42857C13.2124 7.42857 14.3752 7.9102 15.2325 8.76751C16.0898 9.62482 16.5714 10.7876 16.5714 12C16.5714 13.2124 16.0898 14.3752 15.2325 15.2325C14.3752 16.0898 13.2124 16.5714 12 19.187ZM12 19.2876C10.7876 19.2876 9.62482 18.7945 8.76751 17.9372C7.9102 17.0799 7.42857 15.8921 7.42857 12C7.42857 10.7876 7.9102 9.62482 8.76751 8.76751C9.62482 7.9102 10.7876 7.42857 12 7.42857C13.2124 7.42857 14.3752 7.9102 15.2325 8.76751C16.0898 9.62482 16.5714 10.7876 16.5714 12C16.5714 13.2124 16.0898 14.3752 15.2325 15.2325C14.3752 16.0898 13.2124 16.5714 12 19.2876ZM12 19.3882C10.7876 19.3882 9.62482 18.8951 8.76751 18.0378C7.9102 17.1805 7.42857 15.9927 7.42857 12C7.42857 10.7876 7.9102 9.62482 8.76751 8.76751C9.62482 7.9102 10.7876 7.42857 12 7.42857C13.2124 7.42857 14.3752 7.9102 15.2325 8.76751C16.0898 9.62482 16.5714 10.7876 16.5714 12C16.5714 13.2124 16.0898 14.3752 15.2325 15.2325C14.3752 16.0898 13.2124 16.5714 12 19.3882ZM12 19.4888C10.7876 19.4888 9.62482 18.9957 8.76751 18.1384C7.9102 17.2811 7.42857 16.0933 7.42857 12C7.42857 10.7876 7.9102 9.62482 8.76751 8.76751C9.62482 7.9102 10.7876 7.42857 12 7.42857C13.2124 7.42857 14.3752 7.9102 15.2325 8.76751C16.0898 9.62482 16.5714 10.7876 16.5714 12C16.5714 13.2124 16.0898 14.3752 15.2325 15.2325C14.3752 16.0898 13.2124 16.5714 12 19.4888ZM12 19.5894C10.7876 19.5894 9.62482 19.0963 8.76751 18.239C7.9102 17.3817 7.42857 16.1939 7.42857 12C7.42857 10.7876 7.9102 9.62482 8.76751 8.76751C9.62482 7.9102 10.7876 7.42857 12 7.42857C13.2124 7.42857 14.3752 7.9102 15.2325 8.76751C16.0898 9.62482 16.5714 10.7876 16.5714 12C16.5714 13.2124 16.0898 14.3752 15.2325 15.2325C14.3752 16.0898 13.2124 16.5714 12 19.5894ZM12 19.69C10.7876 19.69 9.62482 19.1969 8.76751 18.3396C7.9102 17.4823 7.42857 16.2945 7.42857 12C7.42857 10.7876 7.9102 9.62482 8.76751 8.76751C9.62482 7.9102 10.7876 7.42857 12 7.42857C13.2124 7.42857 14.3752 7.9102 15.2325 8.76751C16.0898 9.62482 16.5714 10.7876 16.5714 12C16.5714 13.2124 16.0898 14.3752 15.2325 15.2325C14.3752 16.0898 13.2124 16.5714 12 19.69ZM12 19.7906C10.7876 19.7906 9.62482 19.2975 8.76751 18.4402C7.9102 17.5829 7.42857 16.3951 7.42857 12C7.42857 10.7876 7.9102 9.62482 8.76751 8.76751C9.62482 7.9102 10.7876 7.42857 12 7.42857C13.2124 7.42857 14.3752 7.9102 15.2325 8.76751C16.0898 9.62482 16.5714 10.7876 16.5714 12C16.5714 13.2124 16.0898 14.3752 15.2325 15.2325C14.3752 16.0898 13.2124 16.5714 12 19.7906ZM12 19.8912C10.7876 19.8912 9.62482 19.3981 8.76751 18.5408C7.9102 17.6835 7.42857 16.4957 7.42857 12C7.42857 10.7876 7.9102 9.62482 8.76751 8.76751C9.62482 7.9102 10.7876 7.42857 12 7.42857C13.2124 7.42857 14.3752 7.9102 15.2325 8.76751C16.0898 9.62482 16.5714 10.7876 16.5714 12C16.5714 13.2124 16.0898 14.3752 15.2325 15.2325C14.3752 16.0898 13.2124 16.5714 12 19.8912ZM12 19.9918C10.7876 19.9918 9.62482 19.4987 8.76751 18.6414C7.9102 17.7841 7.42857 16.5963 7.42857 12C7.42857 10.7876 7.9102 9.62482 8.76751 8.76751C9.62482 7.9102 10.7876 7.42857 12 7.42857C13.2124 7.42857 14.3752 7.9102 15.2325 8.76751C16.0898 9.62482 16.5714 10.7876 16.5714 12C16.5714 13.2124 16.0898 14.3752 15.2325 15.2325C14.3752 16.0898 13.2124 16.5714 12 19.9918ZM12 20C10.7876 20 9.62482 19.5069 8.76751 18.6496C7.9102 17.7923 7.42857 16.6045 7.42857 12C7.42857 10.7876 7.9102 9.62482 8.76751 8.76751C9.62482 7.9102 10.7876 7.42857 12 7.42857C13.2124 7.42857 14.3752 7.9102 15.2325 8.76751C16.0898 9.62482 16.5714 10.7876 16.5714 12C16.5714 13.2124 16.0898 14.3752 15.2325 15.2325C14.3752 16.0898 13.2124 16.5714 12 20Z" fill="currentColor"/></svg>',
      "BOOLEAN": '<svg viewBox="0 0 24 24" fill="none"><path fill-rule="evenodd" clip-rule="evenodd" d="M8 6C7.46957 6 6.96086 6.21071 6.58579 6.58579C6.21071 6.96086 6 7.46957 6 8V16C6 16.5304 6.21071 17.0391 6.58579 17.4142C6.96086 17.7893 7.46957 18 8 18H16C16.5304 18 17.0391 17.7893 17.4142 17.4142C17.7893 17.0391 18 16.5304 18 16V8C18 7.46957 17.7893 6.96086 17.4142 6.58579C17.0391 6.21071 16.5304 6 16 6H8ZM7 8C7 7.73478 7.10536 7.48043 7.29289 7.29289C7.48043 7.10536 7.73478 7 8 7H16C16.2652 7 16.5196 7.10536 16.7071 7.29289C16.8946 7.48043 17 7.73478 17 8V16C17 16.2652 16.8946 16.5196 16.7071 16.7071C16.5196 16.8946 16.2652 17 16 17H8C7.73478 17 7.48043 16.8946 7.29289 16.7071C7.10536 16.5196 7 16.2652 7 16V8ZM10.7071 9.29289C10.5196 9.10536 10.2652 9 10 9C9.73478 9 9.48043 9.10536 9.29289 9.29289C9.10536 9.48043 9 9.73478 9 10V14C9 14.2652 9.10536 14.5196 9.29289 14.7071C9.48043 14.8946 9.73478 15 10 15C10.2652 15 10.5196 14.8946 10.7071 14.7071C10.8946 14.5196 11 14.2652 11 14V10C11 9.73478 10.8946 9.48043 10.7071 9.29289ZM14.7071 9.29289C14.5196 9.10536 14.2652 9 14 9C13.7348 9 13.4804 9.10536 13.2929 9.29289C13.1054 9.48043 13 9.73478 13 10V14C13 14.2652 13.1054 14.5196 13.2929 14.7071C13.4804 14.8946 13.7348 15 14 15C14.2652 15 14.5196 14.8946 14.7071 14.7071C14.8946 14.5196 15 14.2652 15 14V10C15 9.73478 14.8946 9.48043 14.7071 9.29289Z" fill="currentColor"/></svg>'
    };
    // Icônes SVG pour les types de calques
    const layerTypeIcons = {
      FRAME: '<svg width="24" height="24" viewBox="0 0 24 24" fill="none"><path fill-rule="evenodd" clip-rule="evenodd" d="M8.25 4.5C8.44891 4.5 8.63968 4.57902 8.78033 4.71967C8.92098 4.86032 9 5.05109 9 5.25V7.5H15V5.25C15 5.05109 15.079 4.86032 15.2197 4.71967C15.3603 4.57902 15.5511 4.5 15.75 4.5C15.9489 4.5 16.1397 4.57902 16.2803 4.71967C16.421 4.86032 16.5 5.05109 16.5 5.25V7.5H18.75C18.9489 7.5 19.1397 7.57902 19.2803 7.71967C19.421 7.86032 19.5 8.05109 19.5 8.25C19.5 8.44891 19.421 8.63968 19.2803 8.78033C19.1397 8.92098 18.9489 9 18.75 9H16.5V15H18.75C18.9489 15 19.1397 15.079 19.2803 15.2197C19.421 15.3603 19.5 15.5511 19.5 15.75C19.5 15.9489 19.421 16.1397 19.2803 16.2803C19.1397 16.421 18.9489 16.5 18.75 16.5H16.5V18.75C16.5 18.9489 16.421 19.1397 16.2803 19.2803C16.1397 19.421 15.9489 19.5 15.75 19.5C15.5511 19.5 15.3603 19.421 15.2197 19.2803C15.079 19.1397 15 18.9489 15 18.75V16.5H9V18.75C9 18.9489 8.92098 19.1397 8.78033 19.2803C8.63968 19.421 8.44891 19.5 8.25 19.5C8.05109 19.5 7.86032 19.421 7.71967 19.2803C7.57902 19.1397 7.5 18.9489 7.5 18.75V16.5H5.25C5.05109 16.5 4.86032 16.421 4.71967 16.2803C4.57902 16.1397 4.5 15.9489 4.5 15.75C4.5 15.5511 4.57902 15.3603 4.71967 15.2197C4.86032 15.079 5.05109 15 5.25 15H7.5V9H5.25C5.05109 9 4.86032 8.92098 4.71967 8.78033C4.57902 8.63968 4.5 8.44891 4.5 8.25C4.5 8.05109 4.57902 7.86032 4.71967 7.71967C4.86032 7.57902 5.05109 7.5 5.25 7.5H7.5V5.25C7.5 5.05109 7.57902 4.86032 7.71967 4.71967C7.86032 4.57902 8.05109 4.5 8.25 4.5ZM15 15V9H9V15H15Z" fill="currentColor" /></svg >',
      AUTO_HORIZONTAL: '<svg width="24" height="24" viewBox="0 0 24 24" fill="none"><path fill-rule="evenodd" clip-rule="evenodd" d="M6 6H9V18H6V6ZM4.5 6C4.5 5.60218 4.65804 5.22064 4.93934 4.93934C5.22064 4.65804 5.60218 4.5 6 4.5H9C9.39782 4.5 9.77936 4.65804 10.0607 4.93934C10.342 5.22064 10.5 5.60218 10.5 6V18C10.5 18.3978 10.342 18.7794 10.0607 19.0607C9.77936 19.342 9.39782 19.5 9 19.5H6C5.60218 19.5 5.22064 19.342 4.93934 19.0607C4.65804 18.7794 4.5 18.3978 4.5 18V6ZM15 6H18V12H15V6ZM13.5 6C13.5 5.60218 13.658 5.22064 13.9393 4.93934C14.2206 4.65804 14.6022 4.5 15 4.5H18C18.3978 4.5 18.7794 4.65804 19.0607 4.93934C19.342 5.22064 19.5 5.60218 19.5 6V12C19.5 12.3978 19.342 12.7794 19.0607 13.0607C18.7794 13.342 18.3978 13.5 18 13.5H15C14.6022 13.5 14.2206 13.342 13.9393 13.0607C13.658 12.7794 13.5 12.3978 13.5 12V6Z" fill="currentColor"/></svg>',
      AUTO_VERTICAL: '<svg width="24" height="24" viewBox="0 0 24 24" fill="none"><path fill-rule="evenodd" clip-rule="evenodd" d="M6 6V9H18V6H6ZM6 4.5C5.60218 4.5 5.22064 4.65804 4.93934 4.93934C4.65804 5.22064 4.5 5.60218 4.5 6V9C4.5 9.39782 4.65804 9.77936 4.93934 10.0607C5.22064 10.342 5.60218 10.5 6 10.5H18C18.3978 10.5 18.7794 10.342 19.0607 10.0607C19.342 9.77936 19.5 9.39782 19.5 9V6C19.5 5.60218 19.342 5.22064 19.0607 4.93934C18.7794 4.65804 18.3978 4.5 18 4.5H6ZM6 15V18H12V15H6ZM6 13.5C5.60218 13.5 5.22064 13.658 4.93934 13.9393C4.65804 14.2206 4.5 14.6022 4.5 15V18C4.5 18.3978 4.65804 18.7794 4.93934 19.0607C5.22064 19.342 5.60218 19.5 6 19.5H12C12.3978 19.5 12.7794 19.342 13.0607 19.0607C13.342 18.7794 13.5 18.3978 13.5 18V15C13.5 14.6022 13.342 14.2206 13.0607 13.9393C12.7794 13.658 12.3978 13.5 12 13.5H6Z" fill="currentColor"/></svg>',
      AUTO_WRAP: '<svg width="24" height="24" viewBox="0 0 24 24" fill="none"><path fill-rule="evenodd" clip-rule="evenodd" d="M9 6H6V9H9V6ZM6 4.5C5.60218 4.5 5.22064 4.65804 4.93934 4.93934C4.65804 5.22064 4.5 5.60218 4.5 6V9C4.5 9.39782 4.65804 9.77936 4.93934 10.0607C5.22064 10.342 5.60218 10.5 6 10.5H9C9.39782 10.5 9.77936 10.342 10.0607 10.0607C10.342 9.77936 10.5 9.39782 10.5 9V6C10.5 5.60218 10.342 5.22064 10.0607 4.93934C9.77936 4.65804 9.39782 4.5 9 4.5H6ZM18 6H15V9H18V6ZM15 4.5C14.6022 4.5 14.2206 4.65804 13.9393 4.93934C13.658 5.22064 13.5 5.60218 13.5 6V9C13.5 9.39782 13.658 9.77936 13.9393 10.0607C14.2206 10.342 14.6022 10.5 15 10.5H18C18.3978 10.5 18.7794 10.342 19.0607 10.0607C19.342 9.77936 19.5 9.39782 19.5 9V6C19.5 5.60218 19.342 5.22064 19.0607 4.93934C18.7794 4.65804 18.3978 4.5 18 4.5H15ZM6 15H9V18H6V15ZM4.5 15C4.5 14.6022 4.65804 14.2206 4.93934 13.9393C5.22064 13.658 5.60218 13.5 6 13.5H9C9.39782 13.5 9.77936 13.658 10.0607 13.9393C10.342 14.2206 10.5 14.6022 10.5 15V18C10.5 18.3978 10.342 18.7794 10.0607 19.0607C9.77936 19.342 9.39782 19.5 9 19.5H6C5.60218 19.5 5.22064 19.342 4.93934 19.0607C4.65804 18.7794 4.5 18.3978 4.5 18V15Z" fill="currentColor"/></svg>',
      TEXT: '<svg width="24" height="24" viewBox="0 0 24 24" fill="none"><path fill-rule="evenodd" clip-rule="evenodd" d="M4.5 5.25C4.5 5.05109 4.57902 4.86032 4.71967 4.71967C4.86032 4.57902 5.05109 4.5 5.25 4.5H17.25C17.4489 4.5 17.6397 4.57902 17.7803 4.71967C17.921 4.86032 18 5.05109 18 5.25V6.75C18 6.94891 17.921 7.13968 17.7803 7.28033C17.6397 7.42098 17.4489 7.5 17.25 7.5C17.0511 7.5 16.8603 7.42098 16.7197 7.28033C16.579 7.13968 16.5 6.94891 16.5 6.75V6H12V16.5H12.75C12.9489 16.5 13.1397 16.579 13.2803 16.7197C13.421 16.8603 13.5 17.0511 13.5 17.25C13.5 17.4489 13.421 17.6397 13.2803 17.7803C13.1397 17.921 12.9489 18 12.75 18H9.75C9.55109 18 9.36032 17.921 9.21967 17.7803C9.07902 17.6397 9 17.4489 9 17.25C9 17.0511 9.07902 16.8603 9.21967 16.7197C9.36032 16.579 9.55109 16.5 9.75 16.5H10.5V6H6V6.75C6 6.94891 5.92098 7.13968 5.78033 7.28033C5.63968 7.42098 5.44891 7.5 5.25 7.5C5.05109 7.5 4.86032 7.42098 4.71967 7.28033C4.57902 7.13968 4.5 6.94891 4.5 6.75V5.25Z" fill="currentColor"/></svg>',
      COMPONENT: '<svg width="24" height="24" viewBox="0 0 24 24" fill="none"><path fill-rule="evenodd" clip-rule="evenodd" d="M12 8.75701L9.98998 6.75001L12 4.74301L14.01 6.75001L12 8.75701ZM11.355 3.26701L8.51998 6.09901C8.43435 6.18442 8.36641 6.28589 8.32006 6.3976C8.27371 6.50931 8.24985 6.62906 8.24985 6.75001C8.24985 6.87095 8.27371 6.99071 8.32006 7.10242C8.36641 7.21413 8.43435 7.31559 8.51998 7.40101L11.355 10.233C11.5264 10.4034 11.7583 10.499 12 10.499C12.2417 10.499 12.4735 10.4034 12.645 10.233L15.48 7.40101C15.5656 7.31559 15.6335 7.21413 15.6799 7.10242C15.7262 6.99071 15.7501 6.87095 15.7501 6.75001C15.7501 6.62906 15.7262 6.50931 15.6799 6.3976C15.6335 6.28589 15.5656 6.18442 15.48 6.09901L12.645 3.26701C12.4735 3.09663 12.2417 3.00101 12 3.00101C11.7583 3.00101 11.5264 3.09663 11.355 3.26701ZM15.2415 12L17.25 9.99001L19.257 12L17.25 14.01L15.2415 12ZM13.7655 12.645L16.5975 15.48C16.9575 15.84 17.5395 15.84 17.8995 15.48L20.7315 12.645C20.9019 12.4736 20.9975 12.2417 20.9975 12C20.9975 11.7583 20.9019 11.5264 20.7315 11.355L17.8995 8.52001C17.8141 8.43438 17.7126 8.36644 17.6009 8.32009C17.4892 8.27374 17.3694 8.24988 17.2485 8.24988C17.1275 8.24988 17.0078 8.27374 16.8961 8.32009C16.7844 8.36644 16.6829 8.43438 16.5975 8.52001L13.767 11.355C13.5966 11.5264 13.501 11.7583 13.501 12C13.501 12.2417 13.5966 12.4736 13.767 12.645M9.98998 17.25L12 19.257L14.01 17.25L12 15.243L9.98998 17.25ZM8.51998 16.599L11.355 13.767C11.5264 13.5966 11.7583 13.501 12 13.501C12.2417 13.501 12.4735 13.5966 12.645 13.767L15.48 16.599C15.84 16.959 15.84 17.541 15.48 17.901L12.645 20.733C12.4735 20.9034 12.2417 20.999 12 20.999C11.7583 20.999 11.5264 20.9034 11.355 20.733L8.51998 17.901C8.43435 17.8156 8.36641 17.7141 8.32006 17.6024C8.27371 17.4907 8.24985 17.371 8.24985 17.25C8.24985 17.1291 8.27371 17.0093 8.32006 16.8976C8.36641 16.7859 8.43435 16.6844 8.51998 16.599ZM4.74298 12L6.74998 9.99001L8.75698 12L6.74998 14.01L4.74298 12ZM3.26698 12.645L6.09898 15.48C6.45898 15.84 7.04098 15.84 7.40098 15.48L10.233 12.645C10.4034 12.4736 10.499 12.2417 10.499 12C10.499 11.7583 10.4034 11.5264 10.233 11.355L7.40098 8.52001C7.31556 8.43438 7.2141 8.36644 7.10239 8.32009C6.99068 8.27374 6.87092 8.24988 6.74998 8.24988C6.62903 8.24988 6.50928 8.27374 6.39757 8.32009C6.28586 8.36644 6.18439 8.43438 6.09898 8.52001L3.26698 11.355C3.0966 11.5264 3.00098 11.7583 3.00098 12C3.00098 12.2417 3.0966 12.4736 3.26698 12.645Z" fill="currentColor"/></svg>',
      INSTANCE: '<svg width="24" height="24" viewBox="0 0 24 24" fill="none"><path fill-rule="evenodd" clip-rule="evenodd" d="M10.9395 3.43948C11.2208 3.15828 11.6022 3.00031 12 3.00031C12.3977 3.00031 12.7792 3.15828 13.0605 3.43948L20.5605 10.9395C20.8417 11.2208 20.9997 11.6022 20.9997 12C20.9997 12.3977 20.8417 12.7792 20.5605 13.0605L13.0605 20.5605C12.7792 20.8417 12.3977 20.9997 12 20.9997C11.6022 20.9997 11.2208 20.8417 10.9395 20.5605L3.43948 13.0605C3.15828 12.7792 3.00031 12.3977 3.00031 12C3.00031 11.6022 3.15828 11.2208 3.43948 10.9395L10.9395 3.43948ZM5.56048 13.0605L4.49998 12L5.56048 10.9395L10.9395 5.56048L12 4.49998L13.0605 5.56048L18.4395 10.9395L19.5 12L18.4395 13.0605L13.0605 18.4395L12 19.5L10.9395 18.4395L5.56048 13.0605Z" fill="currentColor"/></svg>',
      VECTOR: '<svg width="24" height="24" viewBox="0 0 24 24" fill="none"><path fill-rule="evenodd" clip-rule="evenodd" d="M16.5 6.75001C16.5 6.94892 16.579 7.13969 16.7197 7.28034C16.8603 7.42099 17.0511 7.50001 17.25 7.50001C17.4489 7.50001 17.6397 7.42099 17.7803 7.28034C17.921 7.13969 18 6.94892 18 6.75001C18 6.5511 17.921 6.36033 17.7803 6.21968C17.6397 6.07903 17.4489 6.00001 17.25 6.00001C17.0511 6.00001 16.8603 6.07903 16.7197 6.21968C16.579 6.36033 16.5 6.5511 16.5 6.75001ZM16.5 8.87251C15.9996 8.69559 15.5778 8.34746 15.3093 7.88965C15.0407 7.43184 14.9427 6.89383 15.0324 6.37071C15.1222 5.84759 15.394 5.37304 15.7998 5.03093C16.2056 4.68882 16.7192 4.50119 17.25 4.50119C17.7808 4.50119 18.2944 4.68882 18.7002 5.03093C19.1061 5.37304 19.3778 5.84759 19.4676 6.37071C19.5574 6.89383 19.4593 7.43184 19.1907 7.88965C18.9222 8.34746 18.5004 8.69559 18 8.87251V15.75L19.2345 16.9845C19.2694 17.0193 19.2971 17.0607 19.316 17.1063C19.3349 17.1518 19.3447 17.2007 19.3447 17.25C19.3447 17.2993 19.3349 17.3482 19.316 17.3937C19.2971 17.4393 19.2694 17.4807 19.2345 17.5155L17.5155 19.2345C17.4807 19.2694 17.4393 19.2971 17.3937 19.316C17.3482 19.3349 17.2993 19.3447 17.25 19.3447C17.2007 19.3447 17.1518 19.3349 17.1063 19.316C17.0607 19.2971 17.0193 19.2694 16.9845 19.2345L15.2655 17.5155C15.2306 17.4807 15.2029 17.4393 15.184 17.3937C15.1651 17.3482 15.1553 17.2993 15.1553 17.25C15.1553 17.2007 15.1651 17.1518 15.184 17.1063C15.2029 17.0607 15.2306 17.0193 15.2655 16.9845L16.5 15.75V12.7575C16.154 13.1752 15.6871 13.4755 15.1635 13.617C14.4975 13.788 13.8435 13.6545 13.2765 13.449C12.7215 13.248 12.1635 12.9435 11.667 12.672L11.6415 12.657C11.1135 12.372 10.65 12.12 10.212 11.961C9.777 11.8035 9.459 11.772 9.21 11.8365C8.985 11.8935 8.7 12.06 8.391 12.5565C8.079 13.056 7.7685 13.851 7.5 15.0795V15.1275C8.00042 15.3044 8.42217 15.6526 8.69073 16.1104C8.95929 16.5682 9.05735 17.1062 8.9676 17.6293C8.87785 18.1524 8.60605 18.627 8.20025 18.9691C7.79445 19.3112 7.28077 19.4988 6.75 19.4988C6.21924 19.4988 5.70556 19.3112 5.29976 18.9691C4.89396 18.627 4.62216 18.1524 4.53241 17.6293C4.44265 17.1062 4.54072 16.5682 4.80928 16.1104C5.07784 15.6526 5.49959 15.3044 6 15.1275V8.25001L4.7655 7.01551C4.73058 6.98068 4.70288 6.93929 4.68397 6.89374C4.66507 6.84818 4.65533 6.79934 4.65533 6.75001C4.65533 6.70068 4.66507 6.65184 4.68397 6.60629C4.70288 6.56073 4.73058 6.51934 4.7655 6.48451L6.4845 4.76551C6.51934 4.73059 6.56072 4.70288 6.60628 4.68398C6.65184 4.66507 6.70068 4.65534 6.75 4.65534C6.79933 4.65534 6.84817 4.66507 6.89373 4.68398C6.93929 4.70288 6.98067 4.73059 7.0155 4.76551L8.7345 6.48451C8.76943 6.51934 8.79713 6.56073 8.81604 6.60629C8.83494 6.65184 8.84467 6.70068 8.84467 6.75001C8.84467 6.79934 8.83494 6.84818 8.81604 6.89374C8.79713 6.93929 8.76943 6.98068 8.7345 7.01551L7.5 8.25001V11.2425C7.883 10.8015 8.3285 10.515 8.8365 10.383C9.5025 10.212 10.1565 10.3455 10.7235 10.551C11.2785 10.752 11.8365 11.0565 12.333 11.328L12.3585 11.343C12.8865 11.628 13.35 11.88 13.788 12.039C14.223 12.1965 14.541 12.228 14.79 12.1635C15.015 12.1065 15.3 11.94 15.609 11.4435C15.921 10.944 16.2315 10.149 16.5 8.91901V8.87251ZM6 17.25C6 17.4489 6.07902 17.6397 6.21967 17.7803C6.36033 17.921 6.55109 18 6.75 18C6.94892 18 7.13968 17.921 7.28033 17.7803C7.42099 17.6397 7.5 17.4489 7.5 17.25C7.5 17.0511 7.42099 16.8603 7.28033 16.7197C7.13968 16.579 6.94892 16.5 6.75 16.5C6.55109 16.5 6.36033 16.579 6.21967 16.7197C6.07902 16.8603 6 17.0511 6 17.25Z" fill="currentColor"/></svg>',
      GROUP: '<svg width="24" height="24" viewBox="0 0 24 24" fill="none"><path fill-rule="evenodd" clip-rule="evenodd" d="M4.5 6C4.5 5.60218 4.65804 5.22064 4.93934 4.93934C5.22064 4.65804 5.60218 4.5 6 4.5C6.19891 4.5 6.38968 4.57902 6.53033 4.71967C6.67098 4.86032 6.75 5.05109 6.75 5.25C6.75 5.44891 6.67098 5.63968 6.53033 5.78033C6.38968 5.92098 6.19891 6 6 6C6 6.19891 5.92098 6.38968 5.78033 6.53033C5.63968 6.67098 5.44891 6.75 5.25 6.75C5.05109 6.75 4.86032 6.67098 4.71967 6.53033C4.57902 6.38968 4.5 6.19891 4.5 6ZM8.25 5.25C8.25 5.05109 8.32902 4.86032 8.46967 4.71967C8.61032 4.57902 8.80109 4.5 9 4.5H10.5C10.6989 4.5 10.8897 4.57902 11.0303 4.71967C11.171 4.86032 11.25 5.05109 11.25 5.25C11.25 5.44891 11.171 5.63968 11.0303 5.78033C10.8897 5.92098 10.6989 6 10.5 6H9C8.80109 6 8.61032 5.92098 8.46967 5.78033C8.32902 5.63968 8.25 5.44891 8.25 5.25ZM12.75 5.25C12.75 5.05109 12.829 4.86032 12.9697 4.71967C13.1103 4.57902 13.3011 4.5 13.5 4.5H15C15.1989 4.5 15.3897 4.57902 15.5303 4.71967C15.671 4.86032 15.75 5.05109 15.75 5.25C15.75 5.44891 15.671 5.63968 15.5303 5.78033C15.3897 5.92098 15.1989 6 15 6H13.5C13.3011 6 13.1103 5.92098 12.9697 5.78033C12.829 5.63968 12.75 5.44891 12.75 5.25ZM17.25 5.25C17.25 5.05109 17.329 4.86032 17.4697 4.71967C17.6103 4.57902 17.8011 4.5 18 4.5C18.3978 4.5 18.7794 4.65804 19.0607 4.93934C19.342 5.22064 19.5 5.60218 19.5 6C19.5 6.19891 19.421 6.38968 19.2803 6.53033C19.1397 6.67098 18.9489 6.75 18.75 6.75C18.5511 6.75 18.3603 6.67098 18.2197 6.53033C18.079 6.38968 18 6.19891 18 6C17.8011 6 17.6103 5.92098 17.4697 5.78033C17.329 5.63968 17.25 5.44891 17.25 5.25ZM5.25 8.25C5.44891 8.25 5.63968 8.32902 5.78033 8.46967C5.92098 8.61032 6 8.80109 6 9V10.5C6 10.6989 5.92098 10.8897 5.78033 11.0303C5.63968 11.171 5.44891 11.25 5.25 11.25C5.05109 11.25 4.86032 11.171 4.71967 11.0303C4.57902 10.8897 4.5 10.6989 4.5 10.5V9C4.5 8.80109 4.57902 8.61032 4.71967 8.46967C4.86032 8.32902 5.05109 8.25 5.25 8.25ZM18.75 8.25C18.9489 8.25 19.1397 8.32902 19.2803 8.46967C19.421 8.61032 19.5 8.80109 19.5 9V10.5C19.5 10.6989 19.421 10.8897 19.2803 11.0303C19.1397 11.171 18.9489 11.25 18.75 11.25C18.5511 11.25 18.3603 11.171 18.2197 11.0303C18.079 10.8897 18 10.6989 18 10.5V9C18 8.80109 18.079 8.61032 18.2197 8.46967C18.3603 8.32902 18.5511 8.25 18.75 8.25ZM5.25 12.75C5.44891 12.75 5.63968 12.829 5.78033 12.9697C5.92098 13.1103 6 13.3011 6 13.5V15C6 15.1989 5.92098 15.3897 5.78033 15.5303C5.63968 15.671 5.44891 15.75 5.25 15.75C5.05109 15.75 4.86032 15.671 4.71967 15.5303C4.57902 15.3897 4.5 15.1989 4.5 15V13.5C4.5 13.3011 4.57902 13.1103 4.71967 12.9697C4.86032 12.829 5.05109 12.75 5.25 12.75ZM18.75 12.75C18.9489 12.75 19.1397 12.829 19.2803 12.9697C19.421 13.1103 19.5 13.3011 19.5 13.5V15C19.5 15.1989 19.421 15.3897 19.2803 15.5303C19.1397 15.671 18.9489 15.75 18.75 15.75C18.5511 15.75 18.3603 15.671 18.2197 15.5303C18.079 15.3897 18 15.1989 18 15V13.5C18 13.3011 18.079 13.1103 18.2197 12.9697C18.3603 12.829 18.5511 12.75 18.75 12.75ZM5.25 17.25C5.44891 17.25 5.63968 17.329 5.78033 17.4697C5.92098 17.6103 6 17.8011 6 18C6.19891 18 6.38968 18.079 6.53033 18.2197C6.67098 18.3603 6.75 18.5511 6.75 18.75C6.75 18.9489 6.67098 19.1397 6.53033 19.2803C6.38968 19.421 6.19891 19.5 6 19.5C5.60218 19.5 5.22064 19.342 4.93934 19.0607C4.65804 18.7794 4.5 18.3978 4.5 18C4.5 17.8011 4.57902 17.6103 4.71967 17.4697C4.86032 17.329 5.05109 17.25 5.25 17.25ZM18.75 17.25C18.9489 17.25 19.1397 17.329 19.2803 17.4697C19.421 17.6103 19.5 17.8011 19.5 18C19.5 18.3978 19.342 18.7794 19.0607 19.0607C18.7794 19.342 18.3978 19.5 18 19.5C17.8011 19.5 17.6103 19.421 17.4697 19.2803C17.329 19.1397 17.25 18.9489 17.25 18.75C17.25 18.5511 17.329 18.3603 17.4697 18.2197C17.6103 18.079 17.8011 18 18 18C18 17.8011 18.079 17.6103 18.2197 17.4697C18.3603 17.329 18.5511 17.25 18.75 17.25ZM8.25 18.75C8.25 18.5511 8.32902 18.3603 8.46967 18.2197C8.61032 18.079 8.80109 18 9 18H10.5C10.6989 18 10.8897 18.079 11.0303 18.2197C11.171 18.3603 11.25 18.5511 11.25 18.75C11.25 18.9489 11.171 19.1397 11.0303 19.2803C10.8897 19.421 10.6989 19.5 10.5 19.5H9C8.80109 19.5 8.61032 19.421 8.46967 19.2803C8.32902 19.1397 8.25 18.9489 8.25 18.75ZM12.75 18.75C12.75 18.5511 12.829 18.3603 12.9697 18.2197C13.1103 18.079 13.3011 18 13.5 18H15C15.1989 18 15.3897 18.079 15.5303 18.2197C15.671 18.3603 15.75 18.5511 15.75 18.75C15.75 18.9489 15.671 19.1397 15.5303 19.2803C15.3897 19.421 15.1989 19.5 15 19.5H13.5C13.3011 19.5 13.1103 19.421 12.9697 19.2803C12.829 19.1397 12.75 18.9489 12.75 18.75Z" fill="currentColor"/></svg>',
      RECTANGLE: '<svg width="24" height="24" viewBox="0 0 24 24" fill="none" xmlns="http://www.w3.org/2000/svg"><path fill-rule="evenodd" clip-rule="evenodd" d="M18 5H6C5.73478 5 5.48043 5.10536 5.29289 5.29289C5.10536 5.48043 5 5.73478 5 6V18C5 18.2652 5.10536 18.5196 5.29289 18.7071C5.48043 18.8946 5.73478 19 6 19H18C18.2652 19 18.5196 18.8946 18.7071 18.7071C18.8946 18.5196 19 18.2652 19 18V6C19 5.73478 18.8946 5.48043 18.7071 5.29289C18.5196 5.10536 18.2652 5 18 5ZM6 4C5.46957 4 4.96086 4.21071 4.58579 4.58579C4.21071 4.96086 4 5.46957 4 6V18C4 18.5304 4.21071 19.0391 4.58579 19.4142C4.96086 19.7893 5.46957 20 6 20H18C18.5304 20 19.0391 19.7893 19.4142 19.4142C19.7893 19.0391 20 18.5304 20 18V6C20 5.46957 19.7893 4.96086 19.4142 4.58579C19.0391 4.21071 18.5304 4 18 4H6Z" fill="currentColor"/><path d="M18 3.7998C18.5835 3.7998 19.1431 4.03176 19.5557 4.44434C19.9682 4.85692 20.2002 5.41652 20.2002 6V18C20.2002 18.5835 19.9682 19.1431 19.5557 19.5557C19.1431 19.9682 18.5835 20.2002 18 20.2002H6C5.41652 20.2002 4.85692 19.9682 4.44434 19.5557C4.03176 19.1431 3.7998 18.5835 3.7998 18V6C3.7998 5.41652 4.03176 4.85692 4.44434 4.44434C4.85692 4.03176 5.41652 3.7998 6 3.7998H18ZM6 4C5.46957 4 4.96086 4.21071 4.58579 4.58579C4.21071 4.96086 4 5.46957 4 6V18C4 18.5304 4.21071 19.0391 4.58579 19.4142C4.96086 19.7893 5.46957 20 6 20H18C18.5304 20 19.0391 19.7893 19.4142 19.4142C19.7893 19.0391 20 18.5304 20 18V6C20 5.46957 19.7893 4.96086 19.4142 4.58579C19.0391 4.21071 18.5304 4 18 4H6ZM18 5C18.2652 5 18.5196 5.10536 18.7071 5.29289C18.8946 5.48043 19 5.73478 19 6V18C19 18.2652 18.8946 18.5196 18.7071 18.7071C18.5196 18.8946 18.2652 19 18 19H6C5.73478 19 5.48043 18.8946 5.29289 18.7071C5.10536 18.5196 5 18.2652 5 18V6C5 5.73478 5.10536 5.48043 5.29289 5.29289C5.48043 5.10536 5.73478 5 6 5H18ZM6 5.2002C5.78783 5.2002 5.5846 5.28454 5.43457 5.43457C5.28454 5.5846 5.2002 5.78783 5.2002 6V18C5.2002 18.2122 5.28454 18.4154 5.43457 18.5654C5.5846 18.7155 5.78783 18.7998 6 18.7998H18C18.2122 18.7998 18.4154 18.7155 18.5654 18.5654C18.7155 18.4154 18.7998 18.2122 18.7998 18V6C18.7998 5.78783 18.7155 5.5846 18.5654 5.43457C18.4154 5.28454 18.2122 5.2002 18 5.2002H6Z" fill="currentColor"/></svg>',
      ELLIPSE: '<svg width="24" height="24" viewBox="0 0 24 24" fill="none"><path fill-rule="evenodd" clip-rule="evenodd" d="M12 20C14.1217 20 16.1566 19.1571 17.6569 17.6569C19.1571 16.1566 20 14.1217 20 12C20 9.87827 19.1571 7.84344 17.6569 6.34315C16.1566 4.84285 14.1217 4 12 4C9.87827 4 7.84344 4.84285 6.34315 6.34315C4.84285 7.84344 4 9.87827 4 12C4 14.1217 4.84285 16.1566 6.34315 17.6569C7.84344 19.1571 9.87827 20 12 20ZM12 21C13.1819 21 14.3522 20.7672 15.4442 20.3149C16.5361 19.8626 17.5282 19.1997 18.364 18.364C19.1997 17.5282 19.8626 16.5361 20.3149 15.4442C20.7672 14.3522 21 13.1819 21 12C21 10.8181 20.7672 9.64778 20.3149 8.55585C19.8626 7.46392 19.1997 6.47177 18.364 5.63604C17.5282 4.80031 16.5361 4.13738 15.4442 3.68508C14.3522 3.23279 13.1819 3 12 3C9.61305 3 7.32387 3.94821 5.63604 5.63604C3.94821 7.32387 3 9.61305 3 12C3 14.3869 3.94821 16.6761 5.63604 18.364C7.32387 20.0518 9.61305 21 12 21Z" fill="currentColor"/><path d="M12 2.7998C13.2081 2.7998 14.4044 3.03773 15.5205 3.5C16.6367 3.96234 17.6516 4.63984 18.5059 5.49414C19.3602 6.34844 20.0377 7.3633 20.5 8.47949C20.9623 9.59561 21.2002 10.7919 21.2002 12C21.2002 13.2081 20.9623 14.4044 20.5 15.5205C20.0377 16.6367 19.3602 17.6516 18.5059 18.5059C17.6516 19.3602 16.6367 20.0377 15.5205 20.5C14.5438 20.9045 13.5057 21.1366 12.4521 21.1885L12 21.2002C9.56001 21.2002 7.21948 20.2312 5.49414 18.5059C3.76881 16.7805 2.7998 14.44 2.7998 12C2.7998 9.56001 3.76881 7.21948 5.49414 5.49414C7.21948 3.76881 9.56001 2.7998 12 2.7998ZM12 3C9.61305 3 7.32387 3.94821 5.63604 5.63604C3.94821 7.32387 3 9.61305 3 12C3 14.3869 3.94821 16.6761 5.63604 18.364C7.32387 20.0518 9.61305 21 12 21C13.1819 21 14.3522 20.7672 15.4442 20.3149C16.5361 19.8626 17.5282 19.1997 18.364 18.364C19.1997 17.5282 19.8626 16.5361 20.3149 15.4442C20.7672 14.3522 21 13.1819 21 12C21 10.8181 20.7672 9.64778 20.3149 8.55585C19.8626 7.46392 19.1997 6.47177 18.364 5.63604C17.5282 4.80031 16.5361 4.13738 15.4442 3.68508C14.3522 3.23279 13.1819 3 12 3ZM12 4C14.1217 4 16.1566 4.84285 17.6569 6.34315C19.1571 7.84344 20 9.87827 20 12C20 14.1217 19.1571 16.1566 17.6569 17.6569C16.1566 19.1571 14.1217 20 12 20C9.87827 20 7.84344 19.1571 6.34315 17.6569C4.84285 16.1566 4 14.1217 4 12C4 9.87827 4.84285 7.84344 6.34315 6.34315C7.84344 4.84285 9.87827 4 12 4ZM12 4.2002C9.93131 4.2002 7.94716 5.02159 6.48438 6.48438C5.02159 7.94716 4.2002 9.93131 4.2002 12C4.2002 14.0687 5.02159 16.0528 6.48438 17.5156C7.94716 18.9784 9.93131 19.7998 12 19.7998C14.0687 19.7998 16.0528 18.9784 17.5156 17.5156C18.9784 16.0528 19.7998 14.0687 19.7998 12C19.7998 9.93131 18.9784 7.94716 17.5156 6.48438C16.0528 5.02159 14.0687 4.2002 12 4.2002Z" fill="currentColor"/></svg>',
      LINE: '<svg width="24" height="24" viewBox="0 0 24 24" fill="none"><path fill-rule="evenodd" clip-rule="evenodd" d="M19.854 4.14601C19.9006 4.19245 19.9375 4.24763 19.9627 4.30838C19.9879 4.36912 20.0009 4.43424 20.0009 4.50001C20.0009 4.56578 19.9879 4.6309 19.9627 4.69164C19.9375 4.75239 19.9006 4.80756 19.854 4.85401L4.85402 19.854C4.76013 19.9479 4.6328 20.0006 4.50002 20.0006C4.36725 20.0006 4.23991 19.9479 4.14602 19.854C4.05213 19.7601 3.99939 19.6328 3.99939 19.5C3.99939 19.3672 4.05213 19.2399 4.14602 19.146L19.146 4.14601C19.1925 4.09945 19.2476 4.0625 19.3084 4.0373C19.3691 4.01209 19.4343 3.99911 19.5 3.99911C19.5658 3.99911 19.6309 4.01209 19.6917 4.0373C19.7524 4.0625 19.8076 4.09945 19.854 4.14601Z" fill="currentColor"/><path d="M19.5004 3.79892C19.5922 3.79896 19.6831 3.81746 19.7679 3.85263C19.8526 3.88775 19.9297 3.93925 19.9945 4.004C20.0597 4.06901 20.1125 4.1465 20.1478 4.23154C20.1831 4.31658 20.2006 4.40802 20.2006 4.50009C20.2006 4.59214 20.1831 4.68363 20.1478 4.76865C20.1302 4.81121 20.1079 4.85164 20.0824 4.88974L19.9955 4.99521L4.99548 19.9952C4.86417 20.1265 4.68606 20.2002 4.50037 20.2003C4.31455 20.2003 4.13567 20.1266 4.00427 19.9952C3.87307 19.8639 3.79922 19.6858 3.79919 19.5001C3.79919 19.3144 3.8731 19.1363 4.00427 19.005L19.0043 4.00497L19.1107 3.91708C19.1487 3.89167 19.1894 3.87023 19.2318 3.85263C19.3168 3.81735 19.4083 3.79892 19.5004 3.79892ZM19.5 3.99911C19.4343 3.99911 19.3691 4.01209 19.3084 4.0373C19.2476 4.0625 19.1925 4.09945 19.146 4.14601L4.14602 19.146C4.05213 19.2399 3.99939 19.3672 3.99939 19.5C3.99939 19.6328 4.05213 19.7601 4.14602 19.854C4.23991 19.9479 4.36725 20.0006 4.50002 20.0006C4.6328 20.0006 4.76013 19.9479 4.85402 19.854L19.854 4.85401C19.9006 4.80756 19.9375 4.75239 19.9627 4.69164C19.9879 4.6309 20.0009 4.56578 20.0009 4.50001C20.0009 4.43424 19.9879 4.36912 19.9627 4.30838C19.9375 4.24763 19.9006 4.19245 19.854 4.14601C19.8076 4.09945 19.7524 4.0625 19.6917 4.0373C19.6309 4.01209 19.5658 3.99911 19.5 3.99911Z" fill="currentColor"/></svg>',
      POLYGON: '<svg width="24" height="24" viewBox="0 0 24 24" fill="none"><path fill-rule="evenodd" clip-rule="evenodd" d="M19.361 17.25L12.433 5.25C12.3891 5.17399 12.326 5.11088 12.25 5.067C12.174 5.02312 12.0878 5.00002 12 5.00002C11.9123 5.00002 11.826 5.02312 11.75 5.067C11.674 5.11088 11.6109 5.17399 11.567 5.25L4.63902 17.25C4.59514 17.326 4.57203 17.4122 4.57203 17.5C4.57203 17.5878 4.59514 17.674 4.63902 17.75C4.6829 17.826 4.74602 17.8891 4.82203 17.933C4.89803 17.9769 4.98425 18 5.07202 18H18.928C19.0158 18 19.102 17.9769 19.178 17.933C19.254 17.8891 19.3171 17.826 19.361 17.75C19.4049 17.674 19.428 17.5878 19.428 17.5C19.428 17.4122 19.4049 17.326 19.361 17.25ZM13.3 4.75C13.1684 4.52198 12.979 4.33264 12.751 4.201C12.523 4.06936 12.2643 4.00006 12.001 4.00006C11.7377 4.00006 11.4791 4.06936 11.2511 4.201C11.023 4.33264 10.8337 4.52198 10.702 4.75L3.77402 16.75C3.64241 16.9779 3.5731 17.2365 3.57306 17.4997C3.57301 17.763 3.64223 18.0215 3.77376 18.2495C3.90529 18.4775 4.0945 18.6669 4.32239 18.7986C4.55027 18.9304 4.8088 18.9998 5.07202 19H18.928C19.1914 19.0002 19.4502 18.931 19.6784 18.7994C19.9065 18.6678 20.096 18.4785 20.2278 18.2504C20.3595 18.0224 20.4289 17.7636 20.429 17.5002C20.429 17.2368 20.3597 16.9781 20.228 16.75L13.3 4.75Z" fill="currentColor"/><path d="M12.0008 3.79987C12.2992 3.79987 12.593 3.87821 12.8514 4.0274C13.1097 4.17659 13.3243 4.39208 13.4734 4.65045L20.4012 16.6505L20.4998 16.8497C20.5849 17.0552 20.6287 17.2762 20.6287 17.5001C20.6287 17.7986 20.5505 18.0922 20.4012 18.3506C20.2519 18.6091 20.0367 18.8236 19.7781 18.9727C19.5842 19.0845 19.3707 19.1567 19.1502 19.1856L18.9276 19.2003H5.07208C4.77381 19.2001 4.48072 19.121 4.22247 18.9717C3.96423 18.8225 3.74947 18.608 3.6004 18.3497C3.4514 18.0914 3.37288 17.7982 3.37286 17.5001C3.37292 17.2019 3.45144 16.9087 3.6004 16.6505L10.5291 4.65045L10.6531 4.4649C10.7885 4.2886 10.9574 4.13927 11.1512 4.0274C11.4095 3.87835 11.7026 3.79991 12.0008 3.79987ZM12.001 4.00006C11.7377 4.00006 11.4791 4.06936 11.2511 4.201C11.023 4.33264 10.8337 4.52198 10.702 4.75L3.77402 16.75C3.64241 16.9779 3.5731 17.2365 3.57306 17.4997C3.57301 17.763 3.64223 18.0215 3.77376 18.2495C3.90529 18.4775 4.0945 18.6669 4.32239 18.7986C4.55027 18.9304 4.8088 18.9998 5.07202 19H18.928C19.1914 19.0002 19.4502 18.931 19.6784 18.7994C19.9065 18.6678 20.096 18.4785 20.2278 18.2504C20.3595 18.0224 20.4289 17.7636 20.429 17.5002C20.429 17.2368 20.3597 16.9781 20.228 16.75L13.3 4.75C13.1684 4.52198 12.979 4.33264 12.751 4.201C12.523 4.06936 12.2643 4.00006 12.001 4.00006ZM12 5.00002C12.0878 5.00002 12.174 5.02312 12.25 5.067C12.326 5.11088 12.3891 5.17399 12.433 5.25L19.361 17.25C19.4049 17.326 19.428 17.4122 19.428 17.5C19.428 17.5878 19.4049 17.674 19.361 17.75C19.3171 17.826 19.254 17.8891 19.178 17.933C19.102 17.9769 19.0158 18 18.928 18H5.07202C4.98425 18 4.89803 17.9769 4.82203 17.933C4.74602 17.8891 4.6829 17.826 4.63902 17.75C4.59514 17.674 4.57203 17.5878 4.57203 17.5C4.57203 17.4122 4.59514 17.326 4.63902 17.25L11.567 5.25C11.6109 5.17399 11.674 5.11088 11.75 5.067C11.826 5.02312 11.9123 5.00002 12 5.00002ZM11.9998 5.20026C11.9473 5.20029 11.8959 5.21409 11.8504 5.2403C11.8275 5.25349 11.8064 5.26963 11.7879 5.28815L11.7401 5.34967L4.81232 17.3497C4.78599 17.3953 4.77228 17.4474 4.77228 17.5001C4.77229 17.5527 4.786 17.6049 4.81232 17.6505C4.83859 17.6958 4.87632 17.7336 4.92169 17.7598C4.9673 17.7862 5.01942 17.7999 5.07208 17.7999H18.9276L19.0057 17.7901C19.0309 17.7833 19.0551 17.773 19.0779 17.7598C19.1235 17.7335 19.162 17.696 19.1883 17.6505C19.2146 17.6049 19.2283 17.5527 19.2283 17.5001C19.2283 17.4736 19.2244 17.4473 19.2176 17.4219L19.1883 17.3497L12.2596 5.34967C12.2333 5.30429 12.1956 5.26655 12.1502 5.2403C12.1275 5.22717 12.1031 5.21678 12.0779 5.21002L11.9998 5.20026Z" fill="currentColor"/></svg>',
      STAR: '<svg width="24" height="24" viewBox="0 0 24 24" fill="none"><path fill-rule="evenodd" clip-rule="evenodd" d="M14.28 10L14.051 9.316L12 3.162L9.94901 9.316L9.72001 10H3.16001L8.60001 13.824L6.43701 20.34L11.999 16.26L12.591 16.693L17.563 20.339L15.635 14.529L15.4 13.824L20.84 10H14.28ZM9.00001 9H3.16001C2.18401 9 1.78701 10.256 2.58601 10.818L7.41601 14.215L5.48801 20.025C5.18101 20.949 6.24301 21.722 7.02801 21.145L12 17.5L16.972 21.146C17.757 21.722 18.819 20.949 18.512 20.024L16.584 14.214L21.414 10.818C22.214 10.256 21.816 9 20.839 9H15L12.95 2.846C12.646 1.934 11.356 1.934 11.052 2.846L9.00001 9Z" fill="currentColor"/><path d="M10.9003 2.68349C11.3231 1.68965 12.7862 1.72297 13.1395 2.7831L15.1434 8.7997H20.8387C21.9741 8.7997 22.4585 10.2142 21.6151 10.9159L21.5292 10.9813L16.8202 14.2919L18.702 19.9608L18.7313 20.0643C18.9823 21.0927 17.8444 21.9217 16.9432 21.3671L16.8534 21.3075L11.9989 17.747L7.14637 21.3065C6.20422 21.9987 4.92934 21.0707 5.29773 19.9618L7.17859 14.2929L2.47059 10.9813C1.5127 10.3071 1.9884 8.7997 3.16004 8.7997H8.85633L10.8622 2.7831L10.9003 2.68349ZM12.95 2.846C12.646 1.934 11.356 1.934 11.052 2.846L9.00001 9H3.16001C2.18401 9 1.78701 10.256 2.58601 10.818L7.41601 14.215L5.48801 20.025C5.18101 20.949 6.24301 21.722 7.02801 21.145L12 17.5L16.972 21.146C17.757 21.722 18.819 20.949 18.512 20.024L16.584 14.214L21.414 10.818C22.214 10.256 21.816 9 20.839 9H15L12.95 2.846ZM14.051 9.316L14.28 10H20.84L15.4 13.824L17.563 20.339L11.999 16.26L6.43701 20.34L8.60001 13.824L3.16001 10H9.72001L9.94901 9.316L12 3.162L14.051 9.316ZM9.91004 10.0634L9.86414 10.2001H3.79187L8.8368 13.746L8.78992 13.8876L8.55457 14.5936L6.8241 19.8065L11.2909 16.5321L11.9989 16.0116L12.1171 16.0985L12.7089 16.5311L17.1747 19.8056L15.4452 14.5927L15.2098 13.8876L15.163 13.746L20.2089 10.2001H14.1356L14.0907 10.0634L13.8612 9.37978L11.9999 3.79384L9.91004 10.0634Z" fill="currentColor"/></svg>',
      SLICE: '<svg width="24" height="24" viewBox="0 0 24 24" fill="none"><path fill-rule="evenodd" clip-rule="evenodd" d="M16.41 5.03101C16.8319 4.60965 17.4038 4.37299 18 4.37299C18.5963 4.37299 19.1682 4.60965 19.59 5.03101L20.469 5.90851C20.6781 6.11746 20.844 6.36556 20.9571 6.63863C21.0703 6.91171 21.1285 7.20441 21.1285 7.50001C21.1285 7.7956 21.0703 8.0883 20.9571 8.36138C20.844 8.63445 20.6781 8.88256 20.469 9.09151L13.3665 16.194L12.6705 17.586C12.6184 17.6901 12.5427 17.7806 12.4495 17.8504C12.3563 17.9202 12.2481 17.9673 12.1335 17.988L3.88353 19.488C3.7261 19.5168 3.56359 19.4946 3.41973 19.4244C3.27588 19.3543 3.15824 19.24 3.08399 19.0982C3.00975 18.9564 2.98281 18.7946 3.00711 18.6364C3.0314 18.4782 3.10566 18.332 3.21903 18.219L9.21903 12.219L16.41 5.03101ZM12.75 14.6895L19.41 8.02951C19.5502 7.88892 19.6289 7.69851 19.6289 7.50001C19.6289 7.3015 19.5502 7.11109 19.41 6.97051L18.531 6.09151C18.3904 5.9509 18.1997 5.87192 18.0008 5.87192C17.8019 5.87192 17.6112 5.9509 17.4705 6.09151L10.809 12.75L12.75 14.6895ZM9.75003 13.8105L5.97753 17.583L11.4975 16.578L11.838 15.8985L9.75003 13.8105Z" fill="currentColor"/></svg>',
      SECTION: '<svg width="24" height="24" viewBox="0 0 24 24" fill="none"><path fill-rule="evenodd" clip-rule="evenodd" d="M13 5H18C18.2652 5 18.5196 5.10536 18.7071 5.29289C18.8946 5.48043 19 5.73478 19 6V18C19 18.2652 18.8946 18.5196 18.7071 18.7071C18.5196 18.8946 18.2652 19 18 19H6C5.73478 19 5.48043 18.8946 5.29289 18.7071C5.10536 18.5196 5 18.2652 5 18V10H12C12.2652 10 12.5196 9.89464 12.7071 9.70711C12.8946 9.51957 13 9.26522 13 9V5ZM12 5H6C5.73478 5 5.48043 5.10536 5.29289 5.29289C5.10536 5.48043 5 5.73478 5 6V9H12V5ZM18 4C18.5304 4 19.0391 4.21071 19.4142 4.58579C19.7893 4.96086 20 5.46957 20 6V18C20 18.5304 19.7893 19.0391 19.4142 19.4142C19.0391 19.7893 18.5304 20 18 20H6C5.46957 20 4.96086 19.7893 4.58579 19.4142C4.21071 19.0391 4 18.5304 4 18V6C4 5.93067 4.00333 5.86267 4.01 5.796C4.06051 5.30339 4.29197 4.84704 4.65958 4.51527C5.02719 4.18349 5.50481 3.99989 6 4H18Z" fill="currentColor"/><path d="M18 3.7998C18.5835 3.7998 19.1431 4.03176 19.5557 4.44434C19.9682 4.85692 20.2002 5.41652 20.2002 6V18C20.2002 18.5835 19.9682 19.1431 19.5557 19.5557C19.1431 19.9682 18.5835 20.2002 18 20.2002H6C5.41652 20.2002 4.85692 19.9682 4.44434 19.5557C4.03176 19.1431 3.7998 18.5835 3.7998 18V6C3.7998 5.92436 3.80322 5.84977 3.81055 5.77637L3.81152 5.77539L3.84082 5.57422C3.9323 5.11034 4.17177 4.68645 4.52539 4.36719C4.92975 4.00225 5.45531 3.7997 6 3.7998H18ZM6 4C5.50481 3.99989 5.02719 4.18349 4.65958 4.51527C4.29197 4.84704 4.06051 5.30339 4.01 5.796C4.00333 5.86267 4 5.93067 4 6V18C4 18.5304 4.21071 19.0391 4.58579 19.4142C4.96086 19.7893 5.46957 20 6 20H18C18.5304 20 19.0391 19.7893 19.4142 19.4142C19.7893 19.0391 20 18.5304 20 18V6C20 5.46957 19.7893 4.96086 19.4142 4.58579C19.0391 4.21071 18.5304 4 18 4H6ZM18 5C18.2652 5 18.5196 5.10536 18.7071 5.29289C18.8946 5.48043 19 5.73478 19 6V18C19 18.2652 18.8946 18.5196 18.7071 18.7071C18.5196 18.8946 18.2652 19 18 19H6C5.73478 19 5.48043 18.8946 5.29289 18.7071C5.10536 18.5196 5 18.2652 5 18V10H12C12.2652 10 12.5196 9.89464 12.7071 9.70711C12.8946 9.51957 13 9.26522 13 9V5H18ZM13.2002 9C13.2002 9.31826 13.0737 9.62359 12.8486 9.84863C12.6236 10.0737 12.3183 10.2002 12 10.2002H5.2002V18C5.2002 18.2122 5.28454 18.4154 5.43457 18.5654C5.5846 18.7155 5.78783 18.7998 6 18.7998H18C18.2122 18.7998 18.4154 18.7155 18.5654 18.5654C18.7155 18.4154 18.7998 18.2122 18.7998 18V6C18.7998 5.78783 18.7155 5.5846 18.5654 5.43457C18.4154 5.28454 18.2122 5.2002 18 5.2002H13.2002V9ZM12 5V9H5V6C5 5.73478 5.10536 5.48043 5.29289 5.29289C5.48043 5.10536 5.73478 5 6 5H12ZM6 5.2002C5.78783 5.2002 5.5846 5.28454 5.43457 5.43457C5.28454 5.5846 5.2002 5.78783 5.2002 6V8.7998H11.7998V5.2002H6Z" fill="currentColor"/></svg>'
    };

    // Crée un élément d'icône SVG pour un type de calque
    function createLayerTypeIconElement(layerType) {
      const svgString = layerTypeIcons[layerType];
      if (!svgString) return null;
      const icon = document.createElement('span');
      icon.className = 'layer-type-icon';
      icon.innerHTML = svgString;
      return icon;
    }

    // Crée un élément d'icône SVG pour un type de variable
    function createVariableTypeIconElement(variableType) {
      const svgString = variableTypeIcons[variableType];
      if (!svgString) return null; // Retourne null si pas d'icône pour ce type

      const icon = document.createElement('span');
      icon.className = 'variable-type-svg-icon'; // Utiliser une classe spécifique
      icon.innerHTML = svgString;
      return icon;
    }

    // Icônes SVG pour les types de propriétés
    const propertyIcons = {
      'Fill': '<svg width="24" height="24" viewBox="0 0 24 24" fill="none" xmlns="http://www.w3.org/2000/svg"><path fill-rule="evenodd" clip-rule="evenodd" d="M18.1549 15.3819C18.2904 15.381 18.4222 15.4274 18.5266 15.5117C19.0285 15.9131 19.9998 16.8624 20 18.1976C19.9999 18.6756 19.8053 19.1338 19.4593 19.4718C19.1133 19.8098 18.6442 19.9999 18.1549 20C17.6656 19.9999 17.1953 19.8098 16.8493 19.4718C16.5037 19.1339 16.3088 18.6754 16.3086 18.1976C16.3088 17.0609 17.0567 16.1764 17.577 15.6977L17.7832 15.5172C17.8864 15.4307 18.0189 15.383 18.1549 15.3819ZM18.1628 17.0687C17.8963 17.4001 17.6932 17.7929 17.693 18.1976C17.6931 18.3168 17.7421 18.4313 17.8282 18.5156C17.9146 18.6001 18.0327 18.6476 18.1549 18.6477C18.2771 18.6476 18.394 18.6 18.4804 18.5156C18.5668 18.4312 18.6155 18.317 18.6156 18.1976C18.6155 17.7758 18.4181 17.3875 18.1628 17.0687Z" fill="currentColor"/><path d="M7.77358 4C7.86416 4.00006 7.95458 4.01685 8.0383 4.05062C8.12211 4.08453 8.19825 4.13548 8.26246 4.19806L10.0794 5.9729L11.4897 4.59638L11.5832 4.51386C11.8088 4.33349 12.0934 4.23338 12.3875 4.23327C12.7235 4.23339 13.0464 4.36446 13.2841 4.59638L19.3895 10.5602L19.474 10.6515C19.6587 10.8719 19.7611 11.1498 19.7612 11.4372C19.7611 11.7244 19.6586 12.0013 19.474 12.2217L19.3895 12.313L12.7772 18.772C12.4989 19.0438 12.1687 19.2597 11.8051 19.4069C11.4414 19.5541 11.0509 19.6302 10.6573 19.6303C10.2637 19.6302 9.87306 19.554 9.50943 19.4069C9.23676 19.2965 8.98207 19.1468 8.75472 18.9646L8.53619 18.772L4.87863 15.1981C4.60035 14.9262 4.37821 14.6037 4.22754 14.2485C4.07696 13.8933 4.00005 13.5118 4 13.1273C4.00005 12.7428 4.07696 12.3613 4.22754 12.0061C4.3783 11.6507 4.60012 11.3274 4.87863 11.0554L7.86032 8.14167L7.96508 8.05694C8.00256 8.0325 8.04266 8.01117 8.08448 7.99422C8.16839 7.96027 8.25951 7.94367 8.35032 7.94361L8.4855 7.95571C8.52953 7.96429 8.57334 7.9774 8.61504 7.99422C8.69885 8.02813 8.77499 8.07908 8.8392 8.14167C8.90336 8.20434 8.95533 8.2788 8.99014 8.36064C9.02491 8.44263 9.04304 8.53157 9.04309 8.62032L9.02957 8.75236C9.02075 8.79552 9.00746 8.83802 8.99014 8.87889C8.97279 8.91983 8.95099 8.95885 8.92594 8.99553L8.8392 9.09896L5.85638 12.0116C5.70659 12.1579 5.58718 12.332 5.50605 12.5232C5.42497 12.7145 5.38332 12.9203 5.38327 13.1273C5.38332 13.334 5.42519 13.5393 5.50605 13.7303C5.58719 13.9215 5.70654 14.0966 5.85638 14.243L9.51507 17.8158L9.63222 17.9193C9.75466 18.0175 9.89199 18.0985 10.0389 18.158C10.2346 18.2372 10.4454 18.2779 10.6573 18.278C10.869 18.2779 11.0789 18.2371 11.2746 18.158C11.4705 18.0787 11.6495 17.9624 11.7995 17.8158L18.3284 11.4361L12.3864 5.6318L11.0583 6.9291L13.2808 9.10006C13.5298 9.04906 13.7892 9.06967 14.0253 9.16498C14.2831 9.26927 14.4996 9.4539 14.6393 9.68984C14.7789 9.92604 14.8345 10.2018 14.7981 10.4722C14.7615 10.7425 14.635 10.9935 14.4376 11.1863C14.2401 11.3792 13.9823 11.5028 13.7054 11.5384C13.4288 11.5738 13.1473 11.5195 12.9057 11.3833C12.6643 11.2469 12.4752 11.0363 12.3683 10.7847C12.2705 10.5536 12.2483 10.2989 12.3008 10.0552L7.28358 5.15535C7.21945 5.0926 7.16738 5.01721 7.13264 4.93529C7.11541 4.89453 7.102 4.85179 7.09321 4.80875L7.08082 4.67671C7.08087 4.58796 7.09787 4.49902 7.13264 4.41703C7.16744 4.33505 7.21935 4.26082 7.28358 4.19806C7.34783 4.13532 7.42383 4.08462 7.50774 4.05062C7.59165 4.01667 7.68277 4.00006 7.77358 4Z" fill="currentColor"/></svg>',
      'Opacity': '<svg width="24" height="24" viewBox="0 0 24 24" fill="none" xmlns="http://www.w3.org/2000/svg"><path fill-rule="evenodd" clip-rule="evenodd" d="M7.22727 5.86364H16.7727C17.1344 5.86364 17.4812 6.00731 17.737 6.26304C17.9927 6.51877 18.1364 6.86561 18.1364 7.22727V16.7727C18.1364 17.1344 17.9927 17.4812 17.737 17.737C17.4812 17.9927 17.1344 18.1364 16.7727 18.1364H7.22727C6.86561 18.1364 6.51877 17.9927 6.26304 17.737C6.00731 17.4812 5.86364 17.1344 5.86364 16.7727V7.22727C5.86364 6.86561 6.00731 6.51877 6.26304 6.26304C6.51877 6.00731 6.86561 5.86364 7.22727 5.86364ZM4.5 7.22727C4.5 6.50396 4.78734 5.81026 5.2988 5.2988C5.81026 4.78734 6.50396 4.5 7.22727 4.5H16.7727C17.496 4.5 18.1897 4.78734 18.7012 5.2988C19.2127 5.81026 19.5 6.50396 19.5 7.22727V16.7727C19.5 17.496 19.2127 18.1897 18.7012 18.7012C18.1897 19.2127 17.496 19.5 16.7727 19.5H7.22727C6.50396 19.5 5.81026 19.2127 5.2988 18.7012C4.78734 18.1897 4.5 17.496 4.5 16.7727V7.22727ZM16.0909 8.59091C16.2717 8.59091 16.4452 8.51908 16.573 8.39121C16.7009 8.26334 16.7727 8.08992 16.7727 7.90909C16.7727 7.72826 16.7009 7.55484 16.573 7.42697C16.4452 7.29911 16.2717 7.22727 16.0909 7.22727C15.9101 7.22727 15.7367 7.29911 15.6088 7.42697C15.4809 7.55484 15.4091 7.72826 15.4091 7.90909C15.4091 8.08992 15.4809 8.26334 15.6088 8.39121C15.7367 8.51908 15.9101 8.59091 16.0909 8.59091ZM14.0455 10.6364C14.0455 10.8172 13.9736 10.9906 13.8458 11.1185C13.7179 11.2463 13.5445 11.3182 13.3636 11.3182C13.1828 11.3182 13.0094 11.2463 12.8815 11.1185C12.7537 10.9906 12.6818 10.8172 12.6818 10.6364C12.6818 10.4555 12.7537 10.2821 12.8815 10.1542C13.0094 10.0264 13.1828 9.95455 13.3636 9.95455C13.5445 9.95455 13.7179 10.0264 13.8458 10.1542C13.9736 10.2821 14.0455 10.4555 14.0455 10.6364ZM11.3182 13.3636C11.3182 13.5445 11.2463 13.7179 11.1185 13.8458C10.9906 13.9736 10.8172 14.0455 10.6364 14.0455C10.4555 14.0455 10.2821 13.9736 10.1542 13.8458C10.0264 13.7179 9.95455 13.5445 9.95455 13.3636C9.95455 13.1828 10.0264 13.0094 10.1542 12.8815C10.2821 12.7537 10.4555 12.6818 10.6364 12.6818C10.8172 12.6818 10.9906 12.7537 11.1185 12.8815C11.2463 13.0094 11.3182 13.1828 11.3182 13.3636ZM8.59091 16.0909C8.59091 16.2717 8.51908 16.4452 8.39121 16.573C8.26334 16.7009 8.08992 16.7727 7.90909 16.7727C7.72826 16.7727 7.55484 16.7009 7.42697 16.573C7.29911 16.4452 7.22727 16.2717 7.22727 16.0909C7.22727 15.9101 7.29911 15.7367 7.42697 15.6088C7.55484 15.4809 7.72826 15.4091 7.90909 15.4091C8.08992 15.4091 8.26334 15.4809 8.39121 15.6088C8.51908 15.7367 8.59091 15.9101 8.59091 16.0909ZM10.6364 16.7727C10.8172 16.7727 10.9906 16.7009 11.1185 16.573C11.2463 16.4452 11.3182 16.2717 11.3182 16.0909C11.3182 15.9101 11.2463 15.7367 11.1185 15.6088C10.9906 15.4809 10.8172 15.4091 10.6364 15.4091C10.4555 15.4091 10.2821 15.4809 10.1542 15.6088C10.0264 15.7367 9.95455 15.9101 9.95455 16.0909C9.95455 16.2717 10.0264 16.4452 10.1542 16.573C10.2821 16.7009 10.4555 16.7727 10.6364 16.7727ZM13.3636 14.0455C13.5445 14.0455 13.7179 13.9736 13.8458 13.8458C13.9736 13.7179 14.0455 13.5445 14.0455 13.3636C14.0455 13.1828 13.9736 13.0094 13.8458 12.8815C13.7179 12.7537 13.5445 12.6818 13.3636 12.6818C13.1828 12.6818 13.0094 12.7537 12.8815 12.8815C12.7537 13.0094 12.6818 13.1828 12.6818 13.3636C12.6818 13.5445 12.7537 13.7179 12.8815 13.8458C13.0094 13.9736 13.1828 14.0455 13.3636 14.0455ZM14.0455 16.0909C14.0455 16.2717 13.9736 16.4452 13.8458 16.573C13.7179 16.7009 13.5445 16.7727 13.3636 16.7727C13.1828 16.7727 13.0094 16.7009 12.8815 16.573C12.7537 16.4452 12.6818 16.2717 12.6818 16.0909C12.6818 15.9101 12.7537 15.7367 12.8815 15.6088C13.0094 15.4809 13.1828 15.4091 13.3636 15.4091C13.5445 15.4091 13.7179 15.4809 13.8458 15.6088C13.9736 15.7367 14.0455 15.9101 14.0455 16.0909ZM16.7727 10.6364C16.7727 10.8172 16.7009 10.9906 16.573 11.1185C16.4452 11.2463 16.2717 11.3182 16.0909 11.3182C15.9101 11.3182 15.7367 11.2463 15.6088 11.1185C15.4809 10.9906 15.4091 10.8172 15.4091 10.6364C15.4091 10.4555 15.4809 10.2821 15.6088 10.1542C15.7367 10.0264 15.9101 9.95455 16.0909 9.95455C16.2717 9.95455 16.4452 10.0264 16.573 10.1542C16.7009 10.2821 16.7727 10.4555 16.7727 10.6364ZM16.0909 14.0455C16.2717 14.0455 16.4452 13.9736 16.573 13.8458C16.7009 13.7179 16.7727 13.5445 16.7727 13.3636C16.7727 13.1828 16.7009 13.0094 16.573 12.8815C16.4452 12.7537 16.2717 12.6818 16.0909 12.6818C15.9101 12.6818 15.7367 12.7537 15.6088 12.8815C15.4809 13.0094 15.4091 13.1828 15.4091 13.3636C15.4091 13.5445 15.4809 13.7179 15.6088 13.8458C15.7367 13.9736 15.9101 14.0455 16.0909 14.0455ZM16.7727 16.0909C16.7727 16.2717 16.7009 16.4452 16.573 16.573C16.4452 16.7009 16.2717 16.7727 16.0909 16.7727C15.9101 16.7727 15.7367 16.7009 15.6088 16.573C15.4809 16.4452 15.4091 16.2717 15.4091 16.0909C15.4091 15.9101 15.4809 15.7367 15.6088 15.6088C15.7367 15.4809 15.9101 15.4091 16.0909 15.4091C16.2717 15.4091 16.4452 15.4809 16.573 15.6088C16.7009 15.7367 16.7727 15.9101 16.7727 16.0909Z" fill="currentColor"/></svg>',
      'Radius': '<svg width="24" height="24" viewBox="0 0 24 24" fill="none" xmlns="http://www.w3.org/2000/svg"><path fill-rule="evenodd" clip-rule="evenodd" d="M8.12675 4.5H8.10175C7.59808 4.5 7.18314 4.5 6.84445 4.5275C6.4945 4.55625 6.16955 4.6175 5.8671 4.7725C5.39678 5.01218 5.01441 5.39462 4.77476 5.865C4.61979 6.16875 4.55855 6.49125 4.5298 6.8425C4.50231 7.18 4.50231 7.59625 4.50231 8.1V8.875C4.50231 9.04076 4.56814 9.19973 4.68534 9.31694C4.80253 9.43415 4.96147 9.5 5.12721 9.5C5.29294 9.5 5.45189 9.43415 5.56908 9.31694C5.68628 9.19973 5.75211 9.04076 5.75211 8.875V8.125C5.75211 7.59 5.75211 7.225 5.77586 6.945C5.79836 6.67 5.83835 6.53 5.88834 6.4325C6.00816 6.19731 6.19935 6.00609 6.43451 5.88625C6.53199 5.83625 6.67197 5.79625 6.94693 5.77375C7.22689 5.75 7.59183 5.75 8.12675 5.75H8.87663C9.04237 5.75 9.20132 5.68415 9.31851 5.56694C9.4357 5.44973 9.50154 5.29076 9.50154 5.125C9.50154 4.95924 9.4357 4.80027 9.31851 4.68306C9.20132 4.56585 9.04237 4.5 8.87663 4.5H8.12675ZM15.8756 4.5H15.9006C16.4042 4.5 16.8192 4.5 17.1579 4.5275C17.5091 4.55625 17.8328 4.6175 18.1352 4.7725C18.6055 5.01218 18.9879 5.39462 19.2275 5.865C19.3825 6.16875 19.4438 6.49125 19.4725 6.8425C19.5 7.18 19.5 7.59625 19.5 8.09875V8.875C19.5 9.04076 19.4342 9.19973 19.317 9.31694C19.1998 9.43415 19.0408 9.5 18.8751 9.5C18.7094 9.5 18.5504 9.43415 18.4332 9.31694C18.316 9.19973 18.2502 9.04076 18.2502 8.875V8.125C18.2502 7.59 18.2502 7.225 18.2264 6.945C18.204 6.67 18.164 6.53 18.114 6.4325C17.9941 6.19731 17.803 6.00609 17.5678 5.88625C17.4703 5.83625 17.3303 5.79625 17.0554 5.77375C16.6625 5.75155 16.269 5.74363 15.8756 5.75H15.1257C14.9599 5.75 14.801 5.68415 14.6838 5.56694C14.5666 5.44973 14.5008 5.29076 14.5008 5.125C14.5008 4.95924 14.5666 4.80027 14.6838 4.68306C14.801 4.56585 14.9599 4.5 15.1257 4.5H15.8756ZM15.9006 19.5H15.1257C14.9599 19.5 14.801 19.4342 14.6838 19.3169C14.5666 19.1997 14.5008 19.0408 14.5008 18.875C14.5008 18.7092 14.5666 18.5503 14.6838 18.4331C14.801 18.3158 14.9599 18.25 15.1257 18.25H15.8756C16.4105 18.25 16.7754 18.25 17.0554 18.2263C17.3303 18.2038 17.4703 18.1638 17.5678 18.1138C17.803 17.9939 17.9941 17.8027 18.114 17.5675C18.164 17.47 18.204 17.33 18.2264 17.055C18.2502 16.7738 18.2502 16.41 18.2502 15.875V15.125C18.2502 14.9592 18.316 14.8003 18.4332 14.6831C18.5504 14.5658 18.7094 14.5 18.8751 14.5C19.0408 14.5 19.1998 14.5658 19.317 14.6831C19.4342 14.8003 19.5 14.9592 19.5 15.125V15.9C19.5 16.4037 19.5 16.8187 19.4725 17.1575C19.4438 17.5087 19.3825 17.8325 19.2275 18.135C18.9879 18.6054 18.6055 18.9878 18.1352 19.2275C17.8315 19.3825 17.5091 19.4438 17.1579 19.4725C16.8204 19.5 16.4042 19.5 15.9018 19.5M8.12675 19.5H8.10175C7.59808 19.5 7.18314 19.5 6.84445 19.4725C6.49325 19.4438 6.16955 19.3825 5.8671 19.2275C5.39678 18.9878 5.01441 18.6054 4.77476 18.135C4.61979 17.8313 4.55855 17.5087 4.5298 17.1575C4.50441 16.7388 4.49524 16.3194 4.50231 15.9V15.125C4.50231 14.9592 4.56814 14.8003 4.68534 14.6831C4.80253 14.5658 4.96147 14.5 5.12721 14.5C5.29294 14.5 5.45189 14.5658 5.56908 14.6831C5.68628 14.8003 5.75211 14.9592 5.75211 15.125V15.875C5.75211 16.41 5.75211 16.775 5.77586 17.055C5.79836 17.33 5.83835 17.47 5.88834 17.5675C6.00816 17.8027 6.19935 17.9939 6.43451 18.1138C6.53199 18.1638 6.67197 18.2038 6.94693 18.2263C7.22814 18.25 7.59183 18.25 8.12675 18.25H8.87663C9.04237 18.25 9.20132 18.3158 9.31851 18.4331C9.4357 18.5503 9.50154 18.7092 9.50154 18.875C9.50154 19.0408 9.4357 19.1997 9.31851 19.3169C9.20132 19.4342 9.04237 19.5 8.87663 19.5H8.12675Z" fill="currentColor"/></svg>',
      //Stroke
      'Stroke Color': '<svg width="24" height="24" viewBox="0 0 24 24" fill="none" xmlns="http://www.w3.org/2000/svg"><path fill-rule="evenodd" clip-rule="evenodd" d="M4 5.33333C4 4.97971 4.14048 4.64057 4.39052 4.39052C4.64057 4.14048 4.97971 4 5.33333 4H18.6667C19.0203 4 19.3594 4.14048 19.6095 4.39052C19.8595 4.64057 20 4.97971 20 5.33333V18.6667C20 19.0203 19.8595 19.3594 19.6095 19.6095C19.3594 19.8595 19.0203 20 18.6667 20H5.33333C4.97971 20 4.64057 19.8595 4.39052 19.6095C4.14048 19.3594 4 19.0203 4 18.6667V5.33333ZM8 8V16H16V8H8ZM6 5.33333H5.33333V18.6667H18.6667V5.33333H6ZM6.66667 8V6.66667H17.3333V17.3333H6.66667V8Z" fill="currentColor"/></svg>',
      'Stroke Weight': '<svg width="24" height="24" viewBox="0 0 24 24" fill="none" xmlns="http://www.w3.org/2000/svg"><path fill-rule="evenodd" clip-rule="evenodd" d="M4 4.66667C4 4.48986 4.07024 4.32029 4.19526 4.19526C4.32029 4.07024 4.48986 4 4.66667 4H19.3333C19.5101 4 19.6797 4.07024 19.8047 4.19526C19.9298 4.32029 20 4.48986 20 4.66667C20 4.84348 19.9298 5.01305 19.8047 5.13807C19.6797 5.2631 19.5101 5.33333 19.3333 5.33333H4.66667C4.48986 5.33333 4.32029 5.2631 4.19526 5.13807C4.07024 5.01305 4 4.84348 4 4.66667ZM5.33333 9.33333V10.6667H18.6667V9.33333H5.33333ZM5 8C4.73478 8 4.48043 8.10536 4.29289 8.29289C4.10536 8.48043 4 8.73478 4 9V11C4 11.552 4.448 12 5 12H19C19.2652 12 19.5196 11.8946 19.7071 11.7071C19.8946 11.5196 20 11.2652 20 11V9C20 8.73478 19.8946 8.48043 19.7071 8.29289C19.5196 8.10536 19.2652 8 19 8H5ZM5.33333 18.6667V16H18.6667V18.6667H5.33333ZM4 15.6667C4 15.4015 4.10536 15.1471 4.29289 14.9596C4.48043 14.772 4.73478 14.6667 5 14.6667H19C19.2652 14.6667 19.5196 14.772 19.7071 14.9596C19.8946 15.1471 20 15.4015 20 15.6667V19C20 19.2652 19.8946 19.5196 19.7071 19.7071C19.5196 19.8946 19.2652 20 19 20H5C4.73478 20 4.48043 19.8946 4.29289 19.7071C4.10536 19.5196 4 19.2652 4 19V15.6667Z" fill="currentColor"/></svg>',
      //Font
      'Font Size': '<svg width="24" height="24" viewBox="0 0 24 24" fill="none" xmlns="http://www.w3.org/2000/svg"><path fill-rule="evenodd" clip-rule="evenodd" d="M4.5 5.25C4.5 5.05109 4.57902 4.86032 4.71967 4.71967C4.86032 4.57902 5.05109 4.5 5.25 4.5H17.25C17.4489 4.5 17.6397 4.57902 17.7803 4.71967C17.921 4.86032 18 5.05109 18 5.25V6.75C18 6.94891 17.921 7.13968 17.7803 7.28033C17.6397 7.42098 17.4489 7.5 17.25 7.5C17.0511 7.5 16.8603 7.42098 16.7197 7.28033C16.579 7.13968 16.5 6.94891 16.5 6.75V6H12V16.5H12.75C12.9489 16.5 13.1397 16.579 13.2803 16.7197C13.421 16.8603 13.5 17.0511 13.5 17.25C13.5 17.4489 13.421 17.6397 13.2803 17.7803C13.1397 17.921 12.9489 18 12.75 18H9.75C9.55109 18 9.36032 17.921 9.21967 17.7803C9.07902 17.6397 9 17.4489 9 17.25C9 17.0511 9.07902 16.8603 9.21967 16.7197C9.36032 16.579 9.55109 16.5 9.75 16.5H10.5V6H6V6.75C6 6.94891 5.92098 7.13968 5.78033 7.28033C5.63968 7.42098 5.44891 7.5 5.25 7.5C5.05109 7.5 4.86032 7.42098 4.71967 7.28033C4.57902 7.13968 4.5 6.94891 4.5 6.75V5.25Z" fill="currentColor"/></svg>',
      'Font Weight': '<svg width="24" height="24" viewBox="0 0 24 24" fill="none" xmlns="http://www.w3.org/2000/svg"><path fill-rule="evenodd" clip-rule="evenodd" d="M4.5 5.25C4.5 5.05109 4.57902 4.86032 4.71967 4.71967C4.86032 4.57902 5.05109 4.5 5.25 4.5H17.25C17.4489 4.5 17.6397 4.57902 17.7803 4.71967C17.921 4.86032 18 5.05109 18 5.25V6.75C18 6.94891 17.921 7.13968 17.7803 7.28033C17.6397 7.42098 17.4489 7.5 17.25 7.5C17.0511 7.5 16.8603 7.42098 16.7197 7.28033C16.579 7.13968 16.5 6.94891 16.5 6.75V6H12V16.5H12.75C12.9489 16.5 13.1397 16.579 13.2803 16.7197C13.421 16.8603 13.5 17.0511 13.5 17.25C13.5 17.4489 13.421 17.6397 13.2803 17.7803C13.1397 17.921 12.9489 18 12.75 18H9.75C9.55109 18 9.36032 17.921 9.21967 17.7803C9.07902 17.6397 9 17.4489 9 17.25C9 17.0511 9.07902 16.8603 9.21967 16.7197C9.36032 16.579 9.55109 16.5 9.75 16.5H10.5V6H6V6.75C6 6.94891 5.92098 7.13968 5.78033 7.28033C5.63968 7.42098 5.44891 7.5 5.25 7.5C5.05109 7.5 4.86032 7.42098 4.71967 7.28033C4.57902 7.13968 4.5 6.94891 4.5 6.75V5.25Z" fill="currentColor"/></svg>',
      'Font Family': '<svg width="24" height="24" viewBox="0 0 24 24" fill="none" xmlns="http://www.w3.org/2000/svg"><path fill-rule="evenodd" clip-rule="evenodd" d="M4.5 5.25C4.5 5.05109 4.57902 4.86032 4.71967 4.71967C4.86032 4.57902 5.05109 4.5 5.25 4.5H17.25C17.4489 4.5 17.6397 4.57902 17.7803 4.71967C17.921 4.86032 18 5.05109 18 5.25V6.75C18 6.94891 17.921 7.13968 17.7803 7.28033C17.6397 7.42098 17.4489 7.5 17.25 7.5C17.0511 7.5 16.8603 7.42098 16.7197 7.28033C16.579 7.13968 16.5 6.94891 16.5 6.75V6H12V16.5H12.75C12.9489 16.5 13.1397 16.579 13.2803 16.7197C13.421 16.8603 13.5 17.0511 13.5 17.25C13.5 17.4489 13.421 17.6397 13.2803 17.7803C13.1397 17.921 12.9489 18 12.75 18H9.75C9.55109 18 9.36032 17.921 9.21967 17.7803C9.07902 17.6397 9 17.4489 9 17.25C9 17.0511 9.07902 16.8603 9.21967 16.7197C9.36032 16.579 9.55109 16.5 9.75 16.5H10.5V6H6V6.75C6 6.94891 5.92098 7.13968 5.78033 7.28033C5.63968 7.42098 5.44891 7.5 5.25 7.5C5.05109 7.5 4.86032 7.42098 4.71967 7.28033C4.57902 7.13968 4.5 6.94891 4.5 6.75V5.25Z" fill="currentColor"/></svg>',
      'Letter Spacing': '<svg width="24" height="24" viewBox="0 0 24 24" fill="none" xmlns="http://www.w3.org/2000/svg"><path fill-rule="evenodd" clip-rule="evenodd" d="M4.5 6C4.63261 6 4.75979 6.05268 4.85355 6.14645C4.94732 6.24021 5 6.36739 5 6.5V17.5C5 17.6326 4.94732 17.7598 4.85355 17.8536C4.75979 17.9473 4.63261 18 4.5 18C4.36739 18 4.24021 17.9473 4.14645 17.8536C4.05268 17.7598 4 17.6326 4 17.5V6.5C4 6.36739 4.05268 6.24021 4.14645 6.14645C4.24021 6.05268 4.36739 6 4.5 6ZM19.5 6C19.6326 6 19.7598 6.05268 19.8536 6.14645C19.9473 6.24021 20 6.36739 20 6.5V17.5C20 17.6326 19.9473 17.7598 19.8536 17.8536C19.7598 17.9473 19.6326 18 19.5 18C19.3674 18 19.2402 17.9473 19.1464 17.8536C19.0527 17.7598 19 17.6326 19 17.5V6.5C19 6.36739 19.0527 6.24021 19.1464 6.14645C19.2402 6.05268 19.3674 6 19.5 6ZM8.564 16H9.58L10.384 13.734H13.62L14.424 16H15.44L12.502 8H11.502L8.564 16ZM13.314 12.875L12.034 9.265H11.971L10.689 12.875H13.314Z" fill="currentColor"/></svg>',
      'Line Height': '<svg width="24" height="24" viewBox="0 0 24 24" fill="none" xmlns="http://www.w3.org/2000/svg"><path fill-rule="evenodd" clip-rule="evenodd" d="M5 5.5C5 5.36739 5.05268 5.24021 5.14645 5.14645C5.24021 5.05268 5.36739 5 5.5 5H18.5C18.6326 5 18.7598 5.05268 18.8536 5.14645C18.9473 5.24021 19 5.36739 19 5.5C19 5.63261 18.9473 5.75979 18.8536 5.85355C18.7598 5.94732 18.6326 6 18.5 6H5.5C5.36739 6 5.24021 5.94732 5.14645 5.85355C5.05268 5.75979 5 5.63261 5 5.5ZM5 18.5C5 18.3674 5.05268 18.2402 5.14645 18.1464C5.24021 18.0527 5.36739 18 5.5 18H18.5C18.6326 18 18.7598 18.0527 18.8536 18.1464C18.9473 18.2402 19 18.3674 19 18.5C19 18.6326 18.9473 18.7598 18.8536 18.8536C18.7598 18.9473 18.6326 19 18.5 19H5.5C5.36739 19 5.24021 18.9473 5.14645 18.8536C5.05268 18.7598 5 18.6326 5 18.5ZM8.564 16H9.58L10.384 13.734H13.62L14.424 16H15.44L12.502 8H11.502L8.564 16ZM13.314 12.875L12.034 9.265H11.971L10.689 12.875H13.314Z" fill="currentColor"/></svg>',
      //Spacing
      'Padding': '<svg width="24" height="24" viewBox="0 0 24 24" fill="none" xmlns="http://www.w3.org/2000/svg"><path fill-rule="evenodd" clip-rule="evenodd" d="M5.6 4.8C5.6 4.58783 5.51571 4.38434 5.36569 4.23431C5.21566 4.08429 5.01217 4 4.8 4C4.58783 4 4.38434 4.08429 4.23431 4.23431C4.08429 4.38434 4 4.58783 4 4.8V19.2C4 19.4122 4.08429 19.6157 4.23431 19.7657C4.38434 19.9157 4.58783 20 4.8 20C5.01217 20 5.21566 19.9157 5.36569 19.7657C5.51571 19.6157 5.6 19.4122 5.6 19.2V4.8ZM19.2 4C19.4122 4 19.6157 4.08429 19.7657 4.23431C19.9157 4.38434 20 4.58783 20 4.8V19.2C20 19.4122 19.9157 19.6157 19.7657 19.7657C19.6157 19.9157 19.4122 20 19.2 20C18.9878 20 18.7843 19.9157 18.6343 19.7657C18.4843 19.6157 18.4 19.4122 18.4 19.2V4.8C18.4 4.58783 18.4843 4.38434 18.6343 4.23431C18.7843 4.08429 18.9878 4 19.2 4ZM13.6 13.6V10.4H10.4V13.6H13.6ZM15.2 10.4C15.2 9.97565 15.0314 9.56869 14.7314 9.26863C14.4313 8.96857 14.0243 8.8 13.6 8.8H10.4C9.97565 8.8 9.56869 8.96857 9.26863 9.26863C8.96857 9.56869 8.8 9.97565 8.8 10.4V13.6C8.8 14.0243 8.96857 14.4313 9.26863 14.7314C9.56869 15.0314 9.97565 15.2 10.4 15.2H13.6C14.0243 15.2 14.4313 15.0314 14.7314 14.7314C15.0314 14.4313 15.2 14.0243 15.2 13.6V10.4Z" fill="currentColor"/></svg>',
      'Gap': '<svg width="24" height="24" viewBox="0 0 24 24" fill="none" xmlns="http://www.w3.org/2000/svg"><path fill-rule="evenodd" clip-rule="evenodd" d="M4.88889 4C5.12464 4 5.35073 4.09365 5.51743 4.26035C5.68413 4.42705 5.77778 4.65314 5.77778 4.88889V5.33333C5.77778 5.57867 5.97689 5.77778 6.22222 5.77778H17.7778C17.8957 5.77778 18.0087 5.73095 18.092 5.6476C18.1754 5.56425 18.2222 5.45121 18.2222 5.33333V4.88889C18.2222 4.65314 18.3159 4.42705 18.4826 4.26035C18.6493 4.09365 18.8754 4 19.1111 4C19.3469 4 19.573 4.09365 19.7397 4.26035C19.9064 4.42705 20 4.65314 20 4.88889V5.33333C20 6.56 19.0044 7.55556 17.7778 7.55556H6.22222C4.99556 7.55556 4 6.56 4 5.33333V4.88889C4 4.65314 4.09365 4.42705 4.26035 4.26035C4.42705 4.09365 4.65314 4 4.88889 4ZM6.22222 18.2222C6.10435 18.2222 5.9913 18.269 5.90795 18.3524C5.8246 18.4357 5.77778 18.5488 5.77778 18.6667V19.1111C5.77778 19.3469 5.68413 19.573 5.51743 19.7397C5.35073 19.9064 5.12464 20 4.88889 20C4.65314 20 4.42705 19.9064 4.26035 19.7397C4.09365 19.573 4 19.3469 4 19.1111V18.6667C4 17.44 4.99556 16.4444 6.22222 16.4444H17.7778C19.0044 16.4444 20 17.44 20 18.6667V19.1111C20 19.3469 19.9064 19.573 19.7397 19.7397C19.573 19.9064 19.3469 20 19.1111 20C18.8754 20 18.6493 19.9064 18.4826 19.7397C18.3159 19.573 18.2222 19.3469 18.2222 19.1111V18.6667C18.2222 18.5488 18.1754 18.4357 18.092 18.3524C18.0087 18.269 17.8957 18.2222 17.7778 18.2222H6.22222ZM8.44444 11.1111C8.2087 11.1111 7.9826 11.2048 7.8159 11.3715C7.64921 11.5382 7.55556 11.7643 7.55556 12C7.55556 12.2357 7.64921 12.4618 7.8159 12.6285C7.9826 12.7952 8.2087 12.8889 8.44444 12.8889H15.5556C15.7913 12.8889 16.0174 12.7952 16.1841 12.6285C16.3508 12.4618 16.4444 12.2357 16.4444 12C16.4444 11.7643 16.3508 11.5382 16.1841 11.3715C16.0174 11.2048 15.7913 11.1111 15.5556 11.1111H8.44444Z" fill="currentColor"/></svg>',
      //Size
      'Width': '<svg width="24" height="24" viewBox="0 0 24 24" fill="none" xmlns="http://www.w3.org/2000/svg"><path fill-rule="evenodd" clip-rule="evenodd" d="M5 6L7.99682 18H9.63694L12 9.093L14.3646 18H16.0032L19 6H17.3647L15.1608 14.82L12.8201 6H11.1799L8.83917 14.82L6.63376 6H5Z" fill="currentColor"/></svg>',
      'Height': '<svg width="24" height="24" viewBox="0 0 24 24" fill="none" xmlns="http://www.w3.org/2000/svg"><path fill-rule="evenodd" clip-rule="evenodd" d="M7 6V18H8.72879V12.7035H15.2776V18H17V6H15.2776V11.28H8.72879V6H7Z" fill="currentColor"/></svg>',
      //Effect
      'Drop Shadow': '<svg width="24" height="24" viewBox="0 0 24 24" fill="none" xmlns="http://www.w3.org/2000/svg"><path d="M16.9047 5.01167C17.4794 5.07059 18.0118 5.34063 18.3989 5.76951C18.7859 6.19839 19.0001 6.75561 19 7.33333V16.6667L18.9883 16.9047C18.9334 17.4384 18.6962 17.937 18.3167 18.3163C17.9372 18.6956 17.4385 18.9326 16.9047 18.9872L16.6667 19H7.33333L7.09533 18.9883C6.56155 18.9334 6.063 18.6962 5.68368 18.3167C5.30435 17.9372 5.06743 17.4385 5.01283 16.9047L5 16.6667V7.33333C4.99988 6.75561 5.21408 6.19839 5.60115 5.76951C5.98821 5.34063 6.52063 5.07059 7.09533 5.01167L7.33333 5H16.6667L16.9047 5.01167ZM7.33333 6.16667C7.02391 6.16667 6.72717 6.28958 6.50838 6.50838C6.28958 6.72717 6.16667 7.02391 6.16667 7.33333V16.6667C6.16667 16.9761 6.28958 17.2728 6.50838 17.4916C6.72717 17.7104 7.02391 17.8333 7.33333 17.8333H16.6667C16.9761 17.8333 17.2728 17.7104 17.4916 17.4916C17.7104 17.2728 17.8333 16.9761 17.8333 16.6667V7.33333C17.8333 7.02391 17.7104 6.72717 17.4916 6.50838C17.2728 6.28958 16.9761 6.16667 16.6667 6.16667H7.33333Z" fill="currentColor"/><path d="M18.9047 7.01167C19.4794 7.07059 20.0118 7.34063 20.3989 7.76951C20.7859 8.19839 21.0001 8.75561 21 9.33333V18.6667C21 19.2855 20.7542 19.879 20.3166 20.3166C19.879 20.7542 19.2855 21 18.6667 21H9.33333C8.75561 21.0001 8.19839 20.7859 7.76951 20.3989C7.34063 20.0118 7.07059 19.4794 7.01167 18.9047L7 18.6667H16.3333C16.9522 18.6667 17.5457 18.4208 17.9832 17.9832C18.4208 17.5457 18.6667 16.9522 18.6667 16.3333V7L18.9047 7.01167Z" fill="currentColor"/></svg>',
      'Layer Blur': '<svg width="24" height="24" viewBox="0 0 24 24" fill="none" xmlns="http://www.w3.org/2000/svg"><path d="M4.66667 18.6667C4.84348 18.6667 5.01305 18.7369 5.13807 18.8619C5.2631 18.987 5.33333 19.1565 5.33333 19.3333C5.33333 19.5101 5.2631 19.6797 5.13807 19.8047C5.01305 19.9298 4.84348 20 4.66667 20C4.48986 20 4.32029 19.9298 4.19526 19.8047C4.07024 19.6797 4 19.5101 4 19.3333C4 19.1565 4.07024 18.987 4.19526 18.8619C4.32029 18.7369 4.48986 18.6667 4.66667 18.6667ZM8.33333 18.6667C8.51014 18.6667 8.67971 18.7369 8.80474 18.8619C8.92976 18.987 9 19.1565 9 19.3333C9 19.5101 8.92976 19.6797 8.80474 19.8047C8.67971 19.9298 8.51014 20 8.33333 20C8.15652 20 7.98695 19.9298 7.86193 19.8047C7.7369 19.6797 7.66667 19.5101 7.66667 19.3333C7.66667 19.1565 7.7369 18.987 7.86193 18.8619C7.98695 18.7369 8.15652 18.6667 8.33333 18.6667ZM12 18.6667C12.1768 18.6667 12.3464 18.7369 12.4714 18.8619C12.5964 18.987 12.6667 19.1565 12.6667 19.3333C12.6667 19.5101 12.5964 19.6797 12.4714 19.8047C12.3464 19.9298 12.1768 20 12 20C11.8232 20 11.6536 19.9298 11.5286 19.8047C11.4036 19.6797 11.3333 19.5101 11.3333 19.3333C11.3333 19.1565 11.4036 18.987 11.5286 18.8619C11.6536 18.7369 11.8232 18.6667 12 18.6667ZM15.6667 18.6667C15.8435 18.6667 16.013 18.7369 16.1381 18.8619C16.2631 18.987 16.3333 19.1565 16.3333 19.3333C16.3333 19.5101 16.2631 19.6797 16.1381 19.8047C16.013 19.9298 15.8435 20 15.6667 20C15.4899 20 15.3203 19.9298 15.1953 19.8047C15.0702 19.6797 15 19.5101 15 19.3333C15 19.1565 15.0702 18.987 15.1953 18.8619C15.3203 18.7369 15.4899 18.6667 15.6667 18.6667ZM19.3333 18.6667C19.5101 18.6667 19.6797 18.7369 19.8047 18.8619C19.9298 18.987 20 19.1565 20 19.3333C20 19.5101 19.9298 19.6797 19.8047 19.8047C19.6797 19.9298 19.5101 20 19.3333 20C19.1565 20 18.987 19.9298 18.8619 19.8047C18.7369 19.6797 18.6667 19.5101 18.6667 19.3333C18.6667 19.1565 18.7369 18.987 18.8619 18.8619C18.987 18.7369 19.1565 18.6667 19.3333 18.6667ZM8.33333 15C8.59855 15 8.8529 15.1054 9.04044 15.2929C9.22798 15.4804 9.33333 15.7348 9.33333 16C9.33333 16.2652 9.22798 16.5196 9.04044 16.7071C8.8529 16.8946 8.59855 17 8.33333 17C8.06812 17 7.81376 16.8946 7.62623 16.7071C7.43869 16.5196 7.33333 16.2652 7.33333 16C7.33333 15.7348 7.43869 15.4804 7.62623 15.2929C7.81376 15.1054 8.06812 15 8.33333 15ZM12 15C12.2652 15 12.5196 15.1054 12.7071 15.2929C12.8946 15.4804 13 15.7348 13 16C13 16.2652 12.8946 16.5196 12.7071 16.7071C12.5196 16.8946 12.2652 17 12 17C11.7348 17 11.4804 16.8946 11.2929 16.7071C11.1054 16.5196 11 16.2652 11 16C11 15.7348 11.1054 15.4804 11.2929 15.2929C11.4804 15.1054 11.7348 15 12 15ZM15.6667 15C15.9319 15 16.1862 15.1054 16.3738 15.2929C16.5613 15.4804 16.6667 15.7348 16.6667 16C16.6667 16.2652 16.5613 16.5196 16.3738 16.7071C16.1862 16.8946 15.9319 17 15.6667 17C15.4015 17 15.1471 16.8946 14.9596 16.7071C14.772 16.5196 14.6667 16.2652 14.6667 16C14.6667 15.7348 14.772 15.4804 14.9596 15.2929C15.1471 15.1054 15.4015 15 15.6667 15ZM4.66667 15.3333C4.84348 15.3333 5.01305 15.4036 5.13807 15.5286C5.2631 15.6536 5.33333 15.8232 5.33333 16C5.33333 16.1768 5.2631 16.3464 5.13807 16.4714C5.01305 16.5964 4.84348 16.6667 4.66667 16.6667C4.48986 16.6667 4.32029 16.5964 4.19526 16.4714C4.07024 16.3464 4 16.1768 4 16C4 15.8232 4.07024 15.6536 4.19526 15.5286C4.32029 15.4036 4.48986 15.3333 4.66667 15.3333ZM19.3333 15.3333C19.5101 15.3333 19.6797 15.4036 19.8047 15.5286C19.9298 15.6536 20 15.8232 20 16C20 16.1768 19.9298 16.3464 19.8047 16.4714C19.6797 16.5964 19.5101 16.6667 19.3333 16.6667C19.1565 16.6667 18.987 16.5964 18.8619 16.4714C18.7369 16.3464 18.6667 16.1768 18.6667 16C18.6667 15.8232 18.7369 15.6536 18.8619 15.5286C18.987 15.4036 19.1565 15.3333 19.3333 15.3333ZM12 10.6667C12.3536 10.6667 12.6928 10.8071 12.9428 11.0572C13.1929 11.3072 13.3333 11.6464 13.3333 12C13.3333 12.3536 13.1929 12.6928 12.9428 12.9428C12.6928 13.1929 12.3536 13.3333 12 13.3333C11.6464 13.3333 11.3072 13.1929 11.0572 12.9428C10.8071 12.6928 10.6667 12.3536 10.6667 12C10.6667 11.6464 10.8071 11.3072 11.0572 11.0572C11.3072 10.8071 11.6464 10.6667 12 10.6667ZM8.33333 11C8.59855 11 8.8529 11.1054 9.04044 11.2929C9.22798 11.4804 9.33333 11.7348 9.33333 12C9.33333 12.2652 9.22798 12.5196 9.04044 12.7071C8.8529 12.8946 8.59855 13 8.33333 13C8.06812 13 7.81376 12.8946 7.62623 12.7071C7.43869 12.5196 7.33333 12.2652 7.33333 12C7.33333 11.7348 7.43869 11.4804 7.62623 11.2929C7.81376 11.1054 8.06812 11 8.33333 11ZM15.6667 11C15.9319 11 16.1862 11.1054 16.3738 11.2929C16.5613 11.4804 16.6667 11.7348 16.6667 12C16.6667 12.2652 16.5613 12.5196 16.3738 12.7071C16.1862 12.8946 15.9319 13 15.6667 13C15.4015 13 15.1471 12.8946 14.9596 12.7071C14.772 12.5196 14.6667 12.2652 14.6667 12C14.6667 11.7348 14.772 11.4804 14.9596 11.2929C15.1471 11.1054 15.4015 11 15.6667 11ZM4.66667 11.3333C4.84348 11.3333 5.01305 11.4036 5.13807 11.5286C5.2631 11.6536 5.33333 11.8232 5.33333 12C5.33333 12.1768 5.2631 12.3464 5.13807 12.4714C5.01305 12.5964 4.84348 12.6667 4.66667 12.6667C4.48986 12.6667 4.32029 12.5964 4.19526 12.4714C4.07024 12.3464 4 12.1768 4 12C4 11.8232 4.07024 11.6536 4.19526 11.5286C4.32029 11.4036 4.48986 11.3333 4.66667 11.3333ZM19.3333 11.3333C19.5101 11.3333 19.6797 11.4036 19.8047 11.5286C19.9298 11.6536 20 11.8232 20 12C20 12.1768 19.9298 12.3464 19.8047 12.4714C19.6797 12.5964 19.5101 12.6667 19.3333 12.6667C19.1565 12.6667 18.987 12.5964 18.8619 12.4714C18.7369 12.3464 18.6667 12.1768 18.6667 12C18.6667 11.8232 18.7369 11.6536 18.8619 11.5286C18.987 11.4036 19.1565 11.3333 19.3333 11.3333ZM8.33333 7C8.59855 7 8.8529 7.10536 9.04044 7.29289C9.22798 7.48043 9.33333 7.73478 9.33333 8C9.33333 8.26522 9.22798 8.51957 9.04044 8.70711C8.8529 8.89464 8.59855 9 8.33333 9C8.06812 9 7.81376 8.89464 7.62623 8.70711C7.43869 8.51957 7.33333 8.26522 7.33333 8C7.33333 7.73478 7.43869 7.48043 7.62623 7.29289C7.81376 7.10536 8.06812 7 8.33333 7ZM12 7C12.2652 7 12.5196 7.10536 12.7071 7.29289C12.8946 7.48043 13 7.73478 13 8C13 8.26522 12.8946 8.51957 12.7071 8.70711C12.5196 8.89464 12.2652 9 12 9C11.7348 9 11.4804 8.89464 11.2929 8.70711C11.1054 8.51957 11 8.26522 11 8C11 7.73478 11.1054 7.48043 11.2929 7.29289C11.4804 7.10536 11.7348 7 12 7ZM15.6667 7C15.9319 7 16.1862 7.10536 16.3738 7.29289C16.5613 7.48043 16.6667 7.73478 16.6667 8C16.6667 8.26522 16.5613 8.51957 16.3738 8.70711C16.1862 8.89464 15.9319 9 15.6667 9C15.4015 9 15.1471 8.89464 14.9596 8.70711C14.772 8.51957 14.6667 8.26522 14.6667 8C14.6667 7.73478 14.772 7.48043 14.9596 7.29289C15.1471 7.10536 15.4015 7 15.6667 7ZM4.66667 7.33333C4.84348 7.33333 5.01305 7.40357 5.13807 7.5286C5.2631 7.65362 5.33333 7.82319 5.33333 8C5.33333 8.17681 5.2631 8.34638 5.13807 8.47141C5.01305 8.59643 4.84348 8.66667 4.66667 8.66667C4.48986 8.66667 4.32029 8.59643 4.19526 8.47141C4.07024 8.34638 4 8.17681 4 8C4 7.82319 4.07024 7.65362 4.19526 7.5286C4.32029 7.40357 4.48986 7.33333 4.66667 7.33333ZM19.3333 7.33333C19.5101 7.33333 19.6797 7.40357 19.8047 7.5286C19.9298 7.65362 20 7.82319 20 8C20 8.17681 19.9298 8.34638 19.8047 8.47141C19.6797 8.59643 19.5101 8.66667 19.3333 8.66667C19.1565 8.66667 18.987 8.59643 18.8619 8.47141C18.7369 8.34638 18.6667 8.17681 18.6667 8C18.6667 7.82319 18.7369 7.65362 18.8619 7.5286C18.987 7.40357 19.1565 7.33333 19.3333 7.33333ZM4.66667 4C4.84348 4 5.01305 4.07024 5.13807 4.19526C5.2631 4.32029 5.33333 4.48986 5.33333 4.66667C5.33333 4.84348 5.2631 5.01305 5.13807 5.13807C5.01305 5.2631 4.84348 5.33333 4.66667 5.33333C4.48986 5.33333 4.32029 5.2631 4.19526 5.13807C4.07024 5.01305 4 4.84348 4 4.66667C4 4.48986 4.07024 4.32029 4.19526 4.19526C4.32029 4.07024 4.48986 4 4.66667 4ZM8.33333 4C8.51014 4 8.67971 4.07024 8.80474 4.19526C8.92976 4.32029 9 4.48986 9 4.66667C9 4.84348 8.92976 5.01305 8.80474 5.13807C8.67971 5.2631 8.51014 5.33333 8.33333 5.33333C8.15652 5.33333 7.98695 5.2631 7.86193 5.13807C7.7369 5.01305 7.66667 4.84348 7.66667 4.66667C7.66667 4.48986 7.7369 4.32029 7.86193 4.19526C7.98695 4.07024 8.15652 4 8.33333 4ZM12 4C12.1768 4 12.3464 4.07024 12.4714 4.19526C12.5964 4.32029 12.6667 4.48986 12.6667 4.66667C12.6667 4.84348 12.5964 5.01305 12.4714 5.13807C12.3464 5.2631 12.1768 5.33333 12 5.33333C11.8232 5.33333 11.6536 5.2631 11.5286 5.13807C11.4036 5.01305 11.3333 4.84348 11.3333 4.66667C11.3333 4.48986 11.4036 4.32029 11.5286 4.19526C11.6536 4.07024 11.8232 4 12 4ZM15.6667 4C15.8435 4 16.013 4.07024 16.1381 4.19526C16.2631 4.32029 16.3333 4.48986 16.3333 4.66667C16.3333 4.84348 16.2631 5.01305 16.1381 5.13807C16.013 5.2631 15.8435 5.33333 15.6667 5.33333C15.4899 5.33333 15.3203 5.2631 15.1953 5.13807C15.0702 5.01305 15 4.84348 15 4.66667C15 4.48986 15.0702 4.32029 15.1953 4.19526C15.3203 4.07024 15.4899 4 15.6667 4ZM19.3333 4C19.5101 4 19.6797 4.07024 19.8047 4.19526C19.9298 4.32029 20 4.48986 20 4.66667C20 4.84348 19.9298 5.01305 19.8047 5.13807C19.6797 5.2631 19.5101 5.33333 19.3333 5.33333C19.1565 5.33333 18.987 5.2631 18.8619 5.13807C18.7369 5.01305 18.6667 4.84348 18.6667 4.66667C18.6667 4.48986 18.7369 4.32029 18.8619 4.19526C18.987 4.07024 19.1565 4 19.3333 4Z" fill="currentColor"/></svg>',
      'Inner Shadow': '<svg width="24" height="24" viewBox="0 0 24 24" fill="none" xmlns="http://www.w3.org/2000/svg"><path d="M16.9047 5.01167C17.4794 5.07059 18.0118 5.34063 18.3989 5.76951C18.7859 6.19839 19.0001 6.75561 19 7.33333V16.6667L18.9883 16.9047C18.9334 17.4384 18.6962 17.937 18.3167 18.3163C17.9372 18.6956 17.4385 18.9326 16.9047 18.9872L16.6667 19H7.33333L7.09533 18.9883C6.56155 18.9334 6.063 18.6962 5.68368 18.3167C5.30435 17.9372 5.06743 17.4385 5.01283 16.9047L5 16.6667V7.33333C4.99988 6.75561 5.21408 6.19839 5.60115 5.76951C5.98821 5.34063 6.52063 5.07059 7.09533 5.01167L7.33333 5H16.6667L16.9047 5.01167ZM7.33333 6.16667C7.02391 6.16667 6.72717 6.28958 6.50838 6.50838C6.28958 6.72717 6.16667 7.02391 6.16667 7.33333V16.6667C6.16667 16.9761 6.28958 17.2728 6.50838 17.4916C6.72717 17.7104 7.02391 17.8333 7.33333 17.8333H16.6667C16.9761 17.8333 17.2728 17.7104 17.4916 17.4916C17.7104 17.2728 17.8333 16.9761 17.8333 16.6667V7.33333C17.8333 7.02391 17.7104 6.72717 17.4916 6.50838C17.2728 6.28958 16.9761 6.16667 16.6667 6.16667H7.33333Z" fill="currentColor"/><path d="M15.6 9.6C15.6 9.28174 15.4736 8.97652 15.2485 8.75147C15.0235 8.52643 14.7183 8.4 14.4 8.4L6 8.4L6 7.2C6 6.88174 6.12643 6.57651 6.35147 6.35147C6.57652 6.12643 6.88174 6 7.2 6L16.8 6C17.1183 6 17.4235 6.12643 17.6485 6.35147C17.8736 6.57652 18 6.88174 18 7.2L18 16.8C18 17.1183 17.8736 17.4235 17.6485 17.6485C17.4235 17.8736 17.1183 18 16.8 18L15.6 18L15.6 9.6Z" fill="currentColor"/></svg>',
      'Background Blur': '<svg width="24" height="24" viewBox="0 0 24 24" fill="none" xmlns="http://www.w3.org/2000/svg"><path d="M17.6053 4.01333C18.2621 4.08068 18.8706 4.38929 19.313 4.87944C19.7553 5.36959 20.0001 6.00642 20 6.66667V17.3333L19.9867 17.6053C19.9239 18.2154 19.6528 18.7851 19.2191 19.2187C18.7853 19.6522 18.2154 19.9229 17.6053 19.9853L17.3333 20H6.66667L6.39467 19.9867C5.78463 19.9239 5.21486 19.6528 4.78135 19.2191C4.34783 18.7853 4.07707 18.2154 4.01467 17.6053L4 17.3333V6.66667C3.99986 6.00642 4.24466 5.36959 4.68702 4.87944C5.12939 4.38929 5.73786 4.08068 6.39467 4.01333L6.66667 4H17.3333L17.6053 4.01333ZM6.66667 5.33333C6.31304 5.33333 5.97391 5.47381 5.72386 5.72386C5.47381 5.97391 5.33333 6.31304 5.33333 6.66667V17.3333C5.33333 17.687 5.47381 18.0261 5.72386 18.2761C5.97391 18.5262 6.31304 18.6667 6.66667 18.6667H17.3333C17.687 18.6667 18.0261 18.5262 18.2761 18.2761C18.5262 18.0261 18.6667 17.687 18.6667 17.3333V6.66667C18.6667 6.31304 18.5262 5.97391 18.2761 5.72386C18.0261 5.47381 17.687 5.33333 17.3333 5.33333H6.66667ZM12 15C12.2652 15 12.5196 15.1054 12.7071 15.2929C12.8946 15.4804 13 15.7348 13 16C13 16.2652 12.8946 16.5196 12.7071 16.7071C12.5196 16.8946 12.2652 17 12 17C11.7348 17 11.4804 16.8946 11.2929 16.7071C11.1054 16.5196 11 16.2652 11 16C11 15.7348 11.1054 15.4804 11.2929 15.2929C11.4804 15.1054 11.7348 15 12 15ZM8 15.3333C8.17681 15.3333 8.34638 15.4036 8.47141 15.5286C8.59643 15.6536 8.66667 15.8232 8.66667 16C8.66667 16.1768 8.59643 16.3464 8.47141 16.4714C8.34638 16.5964 8.17681 16.6667 8 16.6667C7.82319 16.6667 7.65362 16.5964 7.5286 16.4714C7.40357 16.3464 7.33333 16.1768 7.33333 16C7.33333 15.8232 7.40357 15.6536 7.5286 15.5286C7.65362 15.4036 7.82319 15.3333 8 15.3333ZM16 15.3333C16.1768 15.3333 16.3464 15.4036 16.4714 15.5286C16.5964 15.6536 16.6667 15.8232 16.6667 16C16.6667 16.1768 16.5964 16.3464 16.4714 16.4714C16.3464 16.5964 16.1768 16.6667 16 16.6667C15.8232 16.6667 15.6536 16.5964 15.5286 16.4714C15.4036 16.3464 15.3333 16.1768 15.3333 16C15.3333 15.8232 15.4036 15.6536 15.5286 15.5286C15.6536 15.4036 15.8232 15.3333 16 15.3333ZM12 10.6667C12.3536 10.6667 12.6928 10.8071 12.9428 11.0572C13.1929 11.3072 13.3333 11.6464 13.3333 12C13.3333 12.3536 13.1929 12.6928 12.9428 12.9428C12.6928 13.1929 12.3536 13.3333 12 13.3333C11.6464 13.3333 11.3072 13.1929 11.0572 12.9428C10.8071 12.6928 10.6667 12.3536 10.6667 12C10.6667 11.6464 10.8071 11.3072 11.0572 11.0572C11.3072 10.8071 11.6464 10.6667 12 10.6667ZM8 11C8.26522 11 8.51957 11.1054 8.70711 11.2929C8.89464 11.4804 9 11.7348 9 12C9 12.2652 8.89464 12.5196 8.70711 12.7071C8.51957 12.8946 8.26522 13 8 13C7.73478 13 7.48043 12.8946 7.29289 12.7071C7.10536 12.5196 7 12.2652 7 12C7 11.7348 7.10536 11.4804 7.29289 11.2929C7.48043 11.1054 7.73478 11 8 11ZM16 11C16.2652 11 16.5196 11.1054 16.7071 11.2929C16.8946 11.4804 17 11.7348 17 12C17 12.2652 16.8946 12.5196 16.7071 12.7071C16.5196 12.8946 16.2652 13 16 13C15.7348 13 15.4804 12.8946 15.2929 12.7071C15.1054 12.5196 15 12.2652 15 12C15 11.7348 15.1054 11.4804 15.2929 11.2929C15.4804 11.1054 15.7348 11 16 11ZM12 7C12.2652 7 12.5196 7.10536 12.7071 7.29289C12.8946 7.48043 13 7.73478 13 8C13 8.26522 12.8946 8.51957 12.7071 8.70711C12.5196 8.89464 12.2652 9 12 9C11.7348 9 11.4804 8.89464 11.2929 8.70711C11.1054 8.51957 11 8.26522 11 8C11 7.73478 11.1054 7.48043 11.2929 7.29289C11.4804 7.10536 11.7348 7 12 7ZM8 7.33333C8.17681 7.33333 8.34638 7.40357 8.47141 7.5286C8.59643 7.65362 8.66667 7.82319 8.66667 8C8.66667 8.17681 8.59643 8.34638 8.47141 8.47141C8.34638 8.59643 8.17681 8.66667 8 8.66667C7.82319 8.66667 7.65362 8.59643 7.5286 8.47141C7.40357 8.34638 7.33333 8.17681 7.33333 8C7.33333 7.82319 7.40357 7.65362 7.5286 7.5286C7.65362 7.40357 7.82319 7.33333 8 7.33333ZM16 7.33333C16.1768 7.33333 16.3464 7.40357 16.4714 7.5286C16.5964 7.65362 16.6667 7.82319 16.6667 8C16.6667 8.17681 16.5964 8.34638 16.4714 8.47141C16.3464 8.59643 16.1768 8.66667 16 8.66667C15.8232 8.66667 15.6536 8.59643 15.5286 8.47141C15.4036 8.34638 15.3333 8.17681 15.3333 8C15.3333 7.82319 15.4036 7.65362 15.5286 7.5286C15.6536 7.40357 15.8232 7.33333 16 7.33333Z" fill="currentColor"/></svg>'
    };

    // Fonction pour créer le pill d'une variable
    function createVariablePill(item) {
      const pill = document.createElement("span");
      pill.className = \`variable-pill \${item.origin}-variable\`;

      // Ajouter l'icône de type de variable
      const typeIcon = createVariableTypeIconElement(item.type);
      if (typeIcon) {
        pill.appendChild(typeIcon);
      }

      // Ajouter le nom de la variable
      const nameSpan = document.createElement("span");
      nameSpan.textContent = item.name;
      pill.appendChild(nameSpan);

      return pill;
    }

    // Fonction pour créer un élément d'icône de propriété à partir de propertyIcons (réutilisable)
    function createPropertyIcon(propertyName) {
      const svg = propertyIcons[propertyName];
      if (!svg) return null;
      const span = document.createElement('span');
      span.className = 'property-icon';
      span.innerHTML = svg;
      return span;
    }

    // Fonction pour créer un élément de propriété avec icône
    function createPropertyElement(property) {
      const container = document.createElement("div");
      container.className = "title-property-container";

      // Ajouter l'icône de propriété
      const propertyIcon = createPropertyIcon(property);
      if (propertyIcon) {
        container.appendChild(propertyIcon);
      }

      // Ajouter le nom de la propriété
      const propertyName = document.createElement("span");
      propertyName.className = "property-name";
      propertyName.textContent = property;
      container.appendChild(propertyName);

      return container;
    }

    // Fonction pour grouper les propriétés similaires
    function groupSimilarProperties(items) {
      const result = [];
      const processed = new Set();

      // Effets : regrouper par type d'effet
      const effectPattern = /^(Drop Shadow|Inner Shadow|Background Blur|Layer Blur) (.+)$/;
      const effectGroups = {};
      items.forEach(item => {
        const m = item.property.match(effectPattern);
        if (m) {
          const [, effectType, subName] = m;
          if (!effectGroups[effectType]) effectGroups[effectType] = [];
          effectGroups[effectType].push({ ...item, subName });
          processed.add(item);
        }
      });
      for (const [effectType, props] of Object.entries(effectGroups)) {
        result.push({
          isGroup: true,
          groupName: effectType,
          properties: props
        });
      }

      // Groupes potentiels et leurs préfixes
      const groups = [
        {
          prefix: "Radius",
          pattern: /^(Top|Bottom) (Left|Right) Radius$/,
          extractSubName: (prop) => prop.replace(" Radius", ""),
          groupName: "Radius"
        },
        {
          prefix: "Stroke Weight",
          pattern: /^Stroke (Top|Bottom|Left|Right) Weight$/,
          extractSubName: (prop) => prop.replace("Stroke ", "").replace(" Weight", ""),
          groupName: "Stroke Weight"
        },
        {
          prefix: "Padding",
          pattern: /^Padding (Top|Bottom|Left|Right)$/,
          extractSubName: (prop) => prop.replace("Padding ", ""),
          groupName: "Padding"
        }
      ];

      // Chercher les groupes potentiels
      for (const group of groups) {
        const matchingProps = items.filter(item =>
          group.pattern.test(item.property) && !processed.has(item)
        );

        if (matchingProps.length > 1) {
          // Créer un groupe
          result.push({
            isGroup: true,
            groupName: group.groupName,
            properties: matchingProps.map(prop => ({
              ...prop,
              subName: group.extractSubName(prop.property)
            }))
          });

          // Marquer ces propriétés comme traitées
          matchingProps.forEach(p => processed.add(p));
        }
      }

      // Ajouter les propriétés restantes non groupées
      for (const item of items) {
        if (!processed.has(item)) {
          result.push(item);
        }
      }

      return result;
    }

    // Fonction pour grouper les propriétés non liées similaires
    function groupSimilarUnboundProperties(items) {
      const result = [];
      const processed = new Set();
      // Effets non liés : regrouper par type d'effet
      const effectPattern = /^(Drop Shadow|Inner Shadow|Background Blur|Layer Blur) (.+)$/;
      const effectGroups = {};
      items.forEach(item => {
        const m = item.property.match(effectPattern);
        if (m) {
          const [, effectType, subName] = m;
          if (!effectGroups[effectType]) effectGroups[effectType] = [];
          effectGroups[effectType].push({ ...item, subName });
          processed.add(item);
        }
      });
      for (const [effectType, props] of Object.entries(effectGroups)) {
        result.push({
          isGroup: true,
          groupName: effectType,
          properties: props
        });
      }
      // Groupes potentiels et leurs préfixes
      const groups = [
        {
          prefix: "Radius",
          pattern: /^(Top|Bottom) (Left|Right) Radius$/,
          extractSubName: (prop) => prop.replace(" Radius", ""),
          groupName: "Radius"
        },
        {
          prefix: "Stroke Weight",
          pattern: /^Stroke (Top|Bottom|Left|Right) Weight$/,
          extractSubName: (prop) => prop.replace("Stroke ", "").replace(" Weight", ""),
          groupName: "Stroke Weight"
        },
        {
          prefix: "Padding",
          pattern: /^Padding (Top|Bottom|Left|Right)$/,
          extractSubName: (prop) => prop.replace("Padding ", ""),
          groupName: "Padding"
        }
      ];

      // Chercher les groupes potentiels
      for (const group of groups) {
        const matchingProps = items.filter(item =>
          group.pattern.test(item.property) && !processed.has(item)
        );

        if (matchingProps.length > 1) {
          // Créer un groupe
          result.push({
            isGroup: true,
            groupName: group.groupName,
            properties: matchingProps.map(prop => ({
              ...prop,
              subName: group.extractSubName(prop.property)
            }))
          });

          // Marquer ces propriétés comme traitées
          matchingProps.forEach(p => processed.add(p));
        }
      }

      // Ajouter les propriétés restantes non groupées
      for (const item of items) {
        if (!processed.has(item)) {
          result.push(item);
        }
      }

      return result;
    }

    // Fonction pour rendre une liste d'éléments (groupés ou simples)
    function renderItemsList(items, isUnbound = false) {
      const ul = document.createElement("ul");

      for (const item of items) {
        const li = document.createElement("li");

        // Si c'est un groupe de propriétés
        if (item.isGroup) {
          // Titre du groupe
          const groupTitle = document.createElement("div");
          groupTitle.className = "property-group-title";
          const icon = createPropertyIcon(item.groupName);
          if (icon) {
            groupTitle.appendChild(icon);
          }
          const titleText = document.createElement("span");
          titleText.textContent = item.groupName;
          groupTitle.appendChild(titleText);

          li.appendChild(groupTitle);

          // Liste des sous-propriétés
          const subList = document.createElement("ul");
          subList.className = "property-sub-list";

          for (const subItem of item.properties) {
            const subLi = document.createElement("li");

            // Conteneur pour la propriété
            const propContainer = document.createElement("div");
            propContainer.className = "property-container";

            // Conteneur pour la propriété avec son icône
            const propertyContainer = createPropertyElement(subItem.subName);
            propContainer.appendChild(propertyContainer);

            if (isUnbound) {
              // Pour les propriétés non liées, créer un élément qui ressemble à une pill
              const unboundPill = document.createElement("span");
              unboundPill.className = "variable-pill unbound-variable";


              // Ajouter la valeur
              const valueSpan = document.createElement("span");
              valueSpan.textContent = subItem.value;
              unboundPill.appendChild(valueSpan);

              propContainer.appendChild(unboundPill);
            } else {
              // Pill de la variable pour les éléments liés
              const pill = createVariablePill(subItem);
              pill.className = pill.className;
              propContainer.appendChild(pill);
            }

            subLi.appendChild(propContainer);
            subList.appendChild(subLi);
          }

          li.appendChild(subList);
        } else {
          // Propriété simple (groupée ou non)
          const propContainer = document.createElement("div");
          propContainer.className = "property-container";

          // Conteneur pour la propriété avec son icône
          const propertyContainer = createPropertyElement(item.property);
          propContainer.appendChild(propertyContainer);

          if (isUnbound) {
            // Pour les propriétés non liées, créer un élément qui ressemble à une pill
            const unboundPill = document.createElement("span");
            unboundPill.className = "variable-pill unbound-variable";

            // Ajouter la valeur
            const valueSpan = document.createElement("span");
            valueSpan.textContent = item.value;
            unboundPill.appendChild(valueSpan);

            unboundPill.className = unboundPill.className;
            propContainer.appendChild(unboundPill);
          } else {
            // Pill de la variable pour les éléments liés
            const pill = createVariablePill(item);
            pill.className = pill.className;
            propContainer.appendChild(pill);
          }

          li.appendChild(propContainer);
        }

        ul.appendChild(li);
      }

      return ul;
    }

    // --- window.onmessage handler moved below all definitions ---
    window.onmessage = (event) => {
      const msg = event.data.pluginMessage;
      const { byLayer, unbound, layerInfoMap, noVariablesFound } = msg;
      const unboundMap = {};
      if (unbound) {
        unbound.forEach(({ layer, property, value }) => {
          if (!unboundMap[layer]) unboundMap[layer] = [];
          unboundMap[layer].push({ property, value });
        });
      }
      const container = document.getElementById("app");
      container.innerHTML = "";

      // Vérifier s'il n'y a aucune variable ni propriété non liée
      if (noVariablesFound) {
        const emptyMessage = document.createElement("div");
        emptyMessage.style.padding = "2rem";
        emptyMessage.style.textAlign = "center";
        emptyMessage.style.color = "#666";
        emptyMessage.innerHTML = \`
          <h3 style="margin-bottom: 1rem;">Aucune propriété détectée</h3>
          <p>La sélection actuelle ne contient aucune propriété détectable.</p>
          <p>Sélectionnez un élément avec des propriétés à inspecter.</p>
        \`;
        container.appendChild(emptyMessage);
        return;
      }

      // Prépare les informations pour l'affichage
      // Combiner les infos des calques qui ont des variables et des calques qui ont des propriétés non variabilisées
      const allLayerNames = new Set([
        ...Object.keys(byLayer || {}),
        ...Object.keys(unboundMap || {})
      ]);

      // Structure pour stocker toutes les infos des calques avec leur ordre
      const allLayersWithOrderInfo = [];

      // Pour chaque calque qui a des variables liées ou non liées
      for (const layerName of allLayerNames) {
        // Chercher l'ID du calque et son info d'ordre
        let layerId = '';
        let orderInfo = null;

        // D'abord, essayer de trouver l'ID via les variables liées
        if (byLayer && byLayer[layerName] && byLayer[layerName].length > 0) {
          layerId = byLayer[layerName][0].layerId;
          orderInfo = layerInfoMap[layerId];

          // Déduplication des propriétés de remplissage
          // Si un calque a à la fois "Fill" et "fills.0", ne garder que "Fill"
          const items = byLayer[layerName];
          const dedupedItems = [];
          const seenProps = new Set();

          for (const item of items) {
            // Si la propriété est "fills.0" ou commence par "fills.", la renommer en "Fill"
            let propName = item.property;
            if (propName === "fills.0" || propName.startsWith("fills.")) {
              propName = "Fill";
            }

            // Créer une clé de déduplication
            const dedupKey = \`\${propName}|\${item.name}\`;

            // Ne pas ajouter si on a déjà vu cette propriété
            if (!seenProps.has(dedupKey)) {
              seenProps.add(dedupKey);
              dedupedItems.push({ ...item, property: propName });
            }
          }

          // Remplacer les items par les items dédupliqués
          byLayer[layerName] = dedupedItems;
        }

        // Si nous n'avons pas trouvé l'ID/ordre, parcourir tous les layerInfoMap pour trouver le calque par son nom
        if (!orderInfo) {
          for (const [id, info] of Object.entries(layerInfoMap)) {
            if (info.name === layerName) {
              layerId = id;
              orderInfo = info;
              break;
            }
          }
        }

        // Ajouter ce calque avec son info d'ordre
        allLayersWithOrderInfo.push({
          layerName: layerName,
          // Éléments liés à des variables (peut être vide)
          items: (byLayer && byLayer[layerName]) || [],
          // Propriétés non liées (peut être vide)
          unboundItems: (unboundMap && unboundMap[layerName]) || [],
          // Info d'ordre pour trier
          order: orderInfo ? orderInfo.order : Number.MAX_SAFE_INTEGER,
          layerId: layerId
        });
      }

      // Trier tous les calques selon l'ordre de Figma
      allLayersWithOrderInfo.sort((a, b) => a.order - b.order);

      // Afficher toutes les sections pour chaque calque
      for (const { layerName, items, unboundItems, layerId } of allLayersWithOrderInfo) {
        // Ne créer une section que si le calque a des variables liées ou non liées
        if ((items && items.length > 0) || (unboundItems && unboundItems.length > 0)) {
          const section = document.createElement("div");
          section.className = "layer-section";

          // Créer header contenant titre et icône de sélection
          const header = document.createElement("div");
          header.className = "layer-header";
          const hcontent = document.createElement("div");
          hcontent.className = "layer-header-content";
          header.appendChild(hcontent);
          // Récupérer info de calque pour le type
          const layerInfo = layerInfoMap[layerId];
          const layerType = layerInfo ? layerInfo.type : 'UNKNOWN';

          // Icône de type de calque (à gauche du titre)
          const typeIcon = createLayerTypeIconElement(layerType);
          if (typeIcon) {
            hcontent.appendChild(typeIcon);
          }

          // Titre du calque
          const title = document.createElement("h2");
          title.textContent = layerName;
          hcontent.appendChild(title);

          // Icône de sélection (SVG simple, remplace facilement)
          const selectIcon = document.createElement("span");
          selectIcon.className = "select-icon";
          selectIcon.innerHTML = \`
            <svg width="24" height="24" viewBox="0 0 24 24" fill="none">
              <path fill-rule="evenodd" clip-rule="evenodd" d="M12 18.8571C13.8186 18.8571 15.5628 18.1347 16.8487 16.8487C18.1347 15.5628 18.8571 13.8186 18.8571 12C18.8571 10.1814 18.1347 8.43723 16.8487 7.15127C15.5628 5.8653 13.8186 5.14286 12 5.14286C10.1814 5.14286 8.43723 5.8653 7.15127 7.15127C5.8653 8.43723 5.14286 10.1814 5.14286 12C5.14286 13.8186 5.8653 15.5628 7.15127 16.8487C8.43723 18.1347 10.1814 18.8571 12 18.8571ZM12 20C13.0506 20 14.0909 19.7931 15.0615 19.391C16.0321 18.989 16.914 18.3997 17.6569 17.6569C18.3997 16.914 18.989 16.0321 19.391 15.0615C19.7931 14.0909 20 13.0506 20 12C20 10.9494 19.7931 9.90914 19.391 8.93853C18.989 7.96793 18.3997 7.08601 17.6569 6.34315C16.914 5.60028 16.0321 5.011 15.0615 4.60896C14.0909 4.20693 13.0506 4 12 4C9.87827 4 7.84344 4.84285 6.34315 6.34315C4.84285 7.84344 4 9.87827 4 12C4 14.1217 4.84285 16.1566 6.34315 17.6569C7.84344 19.1571 9.87827 20 12 20ZM12 15.4286C12.9093 15.4286 13.7814 15.0673 14.4244 14.4244C15.0673 13.7814 15.4286 12.9093 15.4286 12C15.4286 11.0907 15.0673 10.2186 14.4244 9.57563C13.7814 8.93265 12.9093 8.57143 12 8.57143C11.0907 8.57143 10.2186 8.93265 9.57563 9.57563C8.93265 10.2186 8.57143 11.0907 8.57143 12C8.57143 12.9093 8.93265 13.7814 9.57563 14.4244C10.2186 15.0673 11.0907 15.4286 12 15.4286ZM12 16.5714C13.2124 16.5714 14.3752 16.0898 15.2325 15.2325C16.0898 14.3752 16.5714 13.2124 16.5714 12C16.5714 10.7876 16.0898 9.62482 15.2325 8.76751C14.3752 7.9102 13.2124 7.42857 12 7.42857C10.7876 7.42857 9.62482 7.9102 8.76751 8.76751C7.9102 9.62482 7.42857 10.7876 7.42857 12C7.42857 13.2124 7.9102 14.3752 8.76751 15.2325C9.62482 16.0898 10.7876 16.5714 12 16.5714ZM13.1429 12C13.1429 12.3031 13.0224 12.5938 12.8081 12.8081C12.5938 13.0224 12.3031 13.1429 12 13.1429C11.6969 13.1429 11.4062 13.0224 11.1919 12.8081C10.9776 12.5938 10.8571 12.3031 10.8571 12C10.8571 11.6969 10.9776 11.4062 11.1919 11.1919C11.4062 10.9776 11.6969 10.8571 12 10.8571C12.3031 10.8571 12.5938 10.9776 12.8081 11.1919C13.0224 11.4062 13.1429 11.6969 13.1429 12Z" fill="black"/>
              <path d="M12.3984 3.91016C13.326 3.95584 14.2398 4.16047 15.0996 4.5166C16.0823 4.92366 16.9754 5.52031 17.7275 6.27246C18.4797 7.02462 19.0763 7.91765 19.4834 8.90039C19.8904 9.8831 20.0996 10.9363 20.0996 12C20.0996 13.0637 19.8904 14.1169 19.4834 15.0996C19.0763 16.0823 18.4797 16.9754 17.7275 17.7275C16.9754 18.4797 16.0823 19.0763 15.0996 19.4834C14.1169 19.8904 13.0637 20.0996 12 20.0996C9.85175 20.0996 7.79151 19.2466 6.27246 17.7275C4.75342 16.2085 3.90039 14.1483 3.90039 12C3.90039 9.85175 4.75342 7.79151 6.27246 6.27246C7.79151 4.75342 9.85175 3.90039 12 3.90039L12.3984 3.91016ZM12 4C9.87827 4 7.84344 4.84285 6.34315 6.34315C4.84285 7.84344 4 9.87827 4 12C4 14.1217 4.84285 16.1566 6.34315 17.6569C7.84344 19.1571 9.87827 20 12 20C13.0506 20 14.0909 19.7931 15.0615 19.391C16.0321 18.989 16.914 18.3997 17.6569 17.6569C18.3997 16.914 18.989 16.0321 19.391 15.0615C19.7931 14.0909 20 13.0506 20 12C20 10.9494 19.7931 9.90914 19.391 8.93853C18.989 7.96793 18.3997 7.08601 17.6569 6.34315C16.914 5.60028 16.0321 5.011 15.0615 4.60896C14.0909 4.20693 13.0506 4 12 4ZM12 5.14286C13.8186 5.14286 15.5628 5.8653 16.8487 7.15127C18.1347 8.43723 18.8571 10.1814 18.8571 12C18.8571 13.8186 18.1347 15.5628 16.8487 16.8487C15.5628 18.1347 13.8186 18.8571 12 18.8571C10.1814 18.8571 8.43723 18.1347 7.15127 16.8487C5.8653 15.5628 5.14286 13.8186 5.14286 12C5.14286 10.1814 5.8653 8.43723 7.15127 7.15127C8.43723 5.8653 10.1814 5.14286 12 5.14286ZM12 5.24316C10.2079 5.24316 8.48889 5.95447 7.22168 7.22168C5.95447 8.48889 5.24316 10.2079 5.24316 12C5.24316 13.7921 5.95447 15.5111 7.22168 16.7783C8.48889 18.0455 10.2079 18.7568 12 18.7568C13.7921 18.7568 15.5111 18.0455 16.7783 16.7783C18.0455 15.5111 18.7568 13.7921 18.7568 12C18.7568 10.2079 18.0455 8.48889 16.7783 7.22168C15.5111 5.95447 13.7921 5.24316 12 5.24316ZM12 7.32812C13.2389 7.32813 14.4267 7.8212 15.3027 8.69727C16.1788 9.57333 16.6719 10.7611 16.6719 12C16.6719 13.2389 16.1788 14.4267 15.3027 15.3027C14.4267 16.1788 13.2389 16.6719 12 16.6719C10.7611 16.6719 9.57333 16.1788 8.69727 15.3027C7.8212 14.4267 7.32813 13.2389 7.32812 12C7.32813 10.7611 7.8212 9.57333 8.69727 8.69727C9.57333 7.8212 10.7611 7.32813 12 7.32812ZM12 7.42857C10.7876 7.42857 9.62482 7.9102 8.76751 8.76751C7.9102 9.62482 7.42857 10.7876 7.42857 12C7.42857 13.2124 7.9102 14.3752 8.76751 15.2325C9.62482 16.0898 10.7876 16.5714 12 16.5714C13.2124 16.5714 14.3752 16.0898 15.2325 15.2325C16.0898 14.3752 16.5714 13.2124 16.5714 12C16.5714 10.7876 16.0898 9.62482 15.2325 8.76751C14.3752 7.9102 13.2124 7.42857 12 7.42857ZM12 8.57143C12.9093 8.57143 13.7814 8.93265 14.4244 9.57563C15.0673 10.2186 15.4286 11.0907 15.4286 12C15.4286 12.9093 15.0673 13.7814 14.4244 14.4244C13.7814 15.0673 12.9093 15.4286 12 15.4286C11.0907 15.4286 10.2186 15.0673 9.57563 14.4244C8.93265 13.7814 8.57143 12.9093 8.57143 12C8.57143 11.0907 8.93265 10.2186 9.57563 9.57563C10.2186 8.93265 11.0907 8.57143 12 8.57143ZM12 8.67188C11.1172 8.67188 10.2707 9.02226 9.64648 9.64648C9.02226 10.2707 8.67188 11.1172 8.67188 12C8.67188 12.8828 9.02226 13.7293 9.64648 14.3535C10.2707 14.9777 11.1172 15.3281 12 15.3281C12.8828 15.3281 13.7293 14.9777 14.3535 14.3535C14.9777 13.7293 15.3281 12.8828 15.3281 12C15.3281 11.1172 14.9777 10.2707 14.3535 9.64648C13.7293 9.02226 12.8828 8.67188 12 8.67188ZM12 10.7568C12.3296 10.7568 12.6458 10.888 12.8789 11.1211C13.112 11.3542 13.2432 11.6704 13.2432 12C13.2432 12.3296 13.112 12.6458 12.8789 12.8789C12.6458 13.112 12.3296 13.2432 12 13.2432C11.6704 13.2432 11.3542 13.112 11.1211 12.8789C10.888 12.6458 10.7568 12.3296 10.7568 12C10.7568 11.6704 10.888 11.3542 11.1211 11.1211C11.3542 10.888 11.6704 10.7568 12 10.7568ZM12 10.8571C11.6969 10.8571 11.4062 10.9776 11.1919 11.1919C10.9776 11.4062 10.8571 11.6969 10.8571 12C10.8571 12.3031 10.9776 12.5938 11.1919 12.8081C11.4062 13.0224 11.6969 13.1429 12 13.1429C12.3031 13.1429 12.5938 13.0224 12.8081 12.8081C13.0224 12.5938 13.1429 12.3031 13.1429 12C13.1429 11.6969 13.0224 11.4062 12.8081 11.1919C12.5938 10.9776 12.3031 10.8571 12 10.8571Z" fill="black"/>
            </svg>
          \`;
          selectIcon.title = "Sélectionner ce calque";
          selectIcon.addEventListener("click", () => {
            parent.postMessage({ pluginMessage: { type: "select-node", nodeId: layerId } }, "*");
          });
          header.appendChild(selectIcon);

          section.appendChild(header);



          // Ajouter les propriétés non variabilisées s'il y en a
          if (unboundItems && unboundItems.length > 0) {
            // Grouper aussi les propriétés non liées
            const groupedUnboundItems = groupSimilarUnboundProperties(unboundItems);

            const warn = document.createElement("div");
            warn.className = "danger";
            const wt = document.createElement("h3");
            wt.appendChild(document.createTextNode("🚨 Non‑variabilisé"));
            warn.appendChild(wt);

            // Utiliser la fonction renderItemsList pour les éléments non liés
            const ulWarn = renderItemsList(groupedUnboundItems, true);
            warn.appendChild(ulWarn);
            section.appendChild(warn);
          }

          // Ajouter les variables liées s'il y en a
          if (items && items.length > 0) {
            // Grouper les propriétés similaires
            const groupedItems = groupSimilarProperties(items);

            // Utiliser la fonction renderItemsList pour les éléments liés
            const ul = renderItemsList(groupedItems, false);
            section.appendChild(ul);
          }



          container.appendChild(section);
        }
      }
    };
  <\/script>
</body>

</html>`,w=`body {
  font-family: Inter, sans-serif;
  margin: 0;
  padding: 1rem;
  position: relative;
  min-height: 100vh;
  box-sizing: border-box;
  overflow: auto;
  min-height: 200px;
}

h2 {
  font-size: 1.125rem;
  font-weight: bold;
  margin: 0;
}

ul {
  padding-left: 8px;
  border-left: 1px solid #E5F4FF;
}

li {
  list-style: none;
  margin-bottom: 0.5em;
}

/* Assure que le contenu ne cache pas la poignée */
#app {
  min-height: 200px;
}

.resize-handle {
  position: fixed;
  bottom: 0;
  right: 0;
  width: 24px;
  height: 24px;
  cursor: nwse-resize;
  display: flex;
  align-items: center;
  justify-content: center;
  color: #999;
  transition: color 0.15s ease;
  z-index: 1000;
}

.resize-handle:hover {
  color: #666;
}

.resize-handle svg {
  width: 24px;
  height: 24px;
}

.layer-section {
  margin-bottom: 16px;
  border-bottom: 1px solid #e6e6e6;
  padding-bottom: 16px;
  width: 100%;
}

.layer-section:last-child {
  border-bottom: none;
}

.variable-pill {
  padding: 6px 12px 6px 6px;
  border-radius: 6px;
  font-size: 12px;
  display: flex;
  gap: 2px;
  align-items: center;
  font-weight: 500;
  white-space: nowrap;
  line-height: 20px;
  transition: all 0.15s ease;
  width: fit-content;
}

.local-variable {
  background-color: #e3f1ff;
  color: #1969d2;
}

.external-variable {
  background-color: #eee8ff;
  color: #6451cf;
}

/* Styles pour les groupes de propriétés */
.property-group-title {
  font-weight: 600;
  margin-bottom: 0.5em;
  margin-top: 1em;
  display: flex;
  align-items: center;
}

.property-sub-list {
  padding-left: 1em;
  margin: 0.3em 0 0.8em;
}

.property-sub-list li {
  display: flex;
  flex-direction: column;
  margin-bottom: 0.3em;
}

.property-sub-list .property-name {
  width: 100px;
  font-size: 0.75em;
  color: #555;
}

/* Styles pour les propriétés principales */
.property-container {
  display: flex;
  flex-direction: column;
}

.property-sub-list .title-property-container {
  margin: 0;
}

.property-sub-list .property-container {
  display: flex;
  flex-direction: row;
}

/* Ancien style pour les icônes carrées */
.variable-type-icon {
  display: inline-block;
  width: 10px;
  height: 10px;
  margin-right: 0.4em;
  border-radius: 2px;
}

/* Nouveaux styles pour les icônes SVG de type */
.variable-type-svg-icon {
  width: 20px;
  height: 20px;
}

.variable-type-svg-icon svg {
  width: 100%;
  height: 100%;
  fill: currentColor;
}

/* Style pour les icônes de propriété */
.property-icon {
  display: inline-flex;
  width: 16px;
  height: 16px;
  margin-right: 4px;
  color: currentColor;
}

.property-icon svg {
  width: 100%;
  height: 100%;
  fill: currentColor;
}

/* Style pour le conteneur de propriété */
.title-property-container {
  display: flex;
  align-items: center;
  margin-bottom: 0.5em;
}

.property-name {
  font-weight: 600;
  color: #333;
}

.danger .property-name {
  color: #8F0000;
}

.danger .title-property-container {
  margin-bottom: 0;
}

/* === Sélection de la frame : header + icône === */

/* Conteneur du titre et de l'icône de sélection */
.layer-header {
  display: flex;
  align-items: center;
  justify-content: space-between;
  padding: 0.5em 0.75em;
  border-radius: 6px;
  background: #E5F4FF;
  margin-bottom: 0.5em;
}

.layer-header-content {
  display: flex;
  align-items: center;
}

/* Icône de sélection (cliquable) */
.select-icon {
  cursor: pointer;
  display: flex;
  align-items: center;
  justify-content: center;
  width: 24px;
  height: 24px;
  color: #666;
  /* Couleur par défaut */
  transition: color 0.15s ease;
}

/* Couleur au survol pour donner un feedback visuel */
.select-icon:hover {
  color: #000;
}

/* Icônes de type de calque */
.layer-type-icon {
  display: inline-flex;
  width: 24px;
  height: 24px;
  margin-right: 4px;
  /* espace entre icône et titre */
  color: #000;
  /* couleur par défaut, remplaçable */
}

.layer-type-icon svg {
  width: 100%;
  height: 100%;
  fill: currentColor;
}

.danger {
  background: #ffdcdc;
  padding: 12px;
  margin-bottom: 1em;
  border-radius: 6px;
  color: #B12020;
}

.danger h3 {
  margin-top: 0;
  font-size: 1rem;
  line-height: 1rem;
  color: #8F0000;
}

.danger ul {
  border-left: 1px solid #fdafaf;
}
.unbound-variable {
  color: #8F0000;
  background: #fdb8b8;
  position: relative;
  padding-left: 32px;
}

.unbound-variable::before {
  content: '';
  position: absolute;
  left: 8px;
  top: 50%;
  transform: translateY(-50%);
  width: 16px;
  height: 16px;
  color: #8F0000;
  background-image: url("data:image/svg+xml,%3Csvg xmlns='http://www.w3.org/2000/svg' width='24' height='24' viewBox='0 0 24 24' fill='none' stroke='%238F0000' stroke-width='2' stroke-linecap='round' stroke-linejoin='round'%3E%3Cpath d='m21.73 18-8-14a2 2 0 0 0-3.48 0l-8 14A2 2 0 0 0 4 21h16a2 2 0 0 0 1.73-3'/%3E%3Cpath d='M12 9v4'/%3E%3Cpath d='M12 17h.01'/%3E%3C/svg%3E");
  background-size: contain;
  background-repeat: no-repeat;
  background-position: center;
}

.alert-icon {
  display: inline-flex;
  width: 16px;
  height: 16px;
  margin-right: 4px;
  color: currentColor;
}

.alert-icon svg {
  width: 100%;
  height: 100%;
  fill: currentColor;
}`,d={FILL:"Fill",STROKE:"Stroke",STROKE_COLOR:"Stroke Color",OPACITY:"Opacity",STROKE_WEIGHT:"Stroke Weight",CORNER_RADIUS:"Corner Radius",FONT_SIZE:"Font Size",FONT_WEIGHT:"Font Weight",FONT_FAMILY:"Font Family",LETTER_SPACING:"Letter Spacing",LINE_HEIGHT:"Line Height",PARAGRAPH_SPACING:"Paragraph Spacing",PADDING_LEFT:"Padding Left",PADDING_RIGHT:"Padding Right",PADDING_TOP:"Padding Top",PADDING_BOTTOM:"Padding Bottom",ITEM_SPACING:"Gap"},L={FILL:"Fill",STROKE:"Stroke",STROKE_COLOR:"Stroke Color",OPACITY:"Opacity",STROKE_WEIGHT:"Stroke Weight",CORNER_RADIUS:"Corner Radius",FONT_SIZE:"Font Size",FONT_WEIGHT:"Font Weight",FONT_FAMILY:"Font Family",LETTER_SPACING:"Letter Spacing",LINE_HEIGHT:"Line Height",PARAGRAPH_SPACING:"Paragraph Spacing",PADDING_LEFT:"Padding Left",PADDING_RIGHT:"Padding Right",PADDING_TOP:"Padding Top",PADDING_BOTTOM:"Padding Bottom",ITEM_SPACING:"Gap"},y={itemSpacing:"Gap",paddingTop:"Padding Top",paddingRight:"Padding Right",paddingBottom:"Padding Bottom",paddingLeft:"Padding Left",cornerRadius:"Corner Radius",strokeWeight:"Stroke Weight",opacity:"Opacity",fontSize:"Font Size",fontWeight:"Font Weight",fontName:"Font Family",letterSpacing:"Letter Spacing",lineHeight:"Line Height",paragraphSpacing:"Paragraph Spacing",paragraphIndent:"Paragraph Indent",textCase:"Text Case",textDecoration:"Text Decoration",textAlignHorizontal:"Text Align Horizontal",textAlignVertical:"Text Align Vertical",topLeftRadius:"Top Left Radius",topRightRadius:"Top Right Radius",bottomLeftRadius:"Bottom Left Radius",bottomRightRadius:"Bottom Right Radius",strokeTopWeight:"Stroke Top Weight",strokeBottomWeight:"Stroke Bottom Weight",strokeLeftWeight:"Stroke Left Weight",strokeRightWeight:"Stroke Right Weight",width:"Width",height:"Height"},v=new Set,m=new Set;function Z(e,i,t){return t?`${e}|${i}|${t}`:`${e}|${i}`}function I(){v.clear(),m.clear()}function h(e,i,t){const s=Z(e,i,t);return console.log(`Checking property: ${s}, propertyName: ${i}, exists: ${m.has(s)}`),["paddingLeft","paddingRight","paddingTop","paddingBottom","itemSpacing","gap"].some(C=>i.includes(C))?(console.log(`Skipping deduplication for spacing property: ${i}`),m.add(s),!1):m.has(s)?!0:(m.add(s),!1)}async function N(){const e=new Map,i=figma.variables.getLocalVariableCollections();for(const C of i)for(const n of C.variableIds){const l=await figma.variables.getVariableByIdAsync(n);if(!l)continue;let o;if(l.resolvedType==="COLOR"){const a=Object.keys(l.valuesByMode);if(a.length>0){const p=l.valuesByMode[a[0]];typeof p=="object"&&("r"in p||"g"in p||"b"in p)&&(o=p)}}e.set(n,{name:l.name,type:l.resolvedType,origin:"local",colorValue:o})}const t=figma.currentPage.selection,s=H(t),r=new Set;for(const C of s){const n=b(C);for(const{id:l}of n)e.has(l)||r.add(l)}for(const C of r)try{const n=await figma.variables.getVariableByIdAsync(C);if(!n)continue;let l;if(n.resolvedType==="COLOR"){const o=Object.keys(n.valuesByMode);if(o.length>0){const a=n.valuesByMode[o[0]];typeof a=="object"&&("r"in a||"g"in a||"b"in a)&&(l=a)}}if(e.set(C,{name:n.name,type:n.resolvedType,origin:"external",colorValue:l}),typeof figma.variables.importVariableByKeyAsync=="function"){const o=await figma.variables.importVariableByKeyAsync(n.key);if(o){let a;if(o.resolvedType==="COLOR"){const p=Object.keys(o.valuesByMode);if(p.length>0){const c=o.valuesByMode[p[0]];typeof c=="object"&&("r"in c||"g"in c||"b"in c)&&(a=c)}}e.set(C,{name:o.name,type:o.resolvedType,origin:"external",colorValue:a})}}}catch(n){console.warn(`Impossible de récupérer la variable ${C}:`,n)}return console.log("loadVariables: found",e.size,"variables"),e}function T(e,i){const t=[];"fills"in e&&Array.isArray(e.fills)&&t.push(...e.fills),"backgrounds"in e&&Array.isArray(e.backgrounds)&&t.push(...e.backgrounds);const s=new Set,r=new Set;for(const C of t){const n=C,l=n.boundVariables&&n.boundVariables.color;l&&l.id&&!s.has(l.id)&&(r.add(l.id),s.add(l.id))}if(r.size>0){const C=Array.from(r)[0];i.push({layer:e.name,property:L.FILL,id:C}),r.size>1&&console.log(`${e.name} a ${r.size} variables de remplissage, seule la première est affichée`)}}function x(e,i){if("strokes"in e&&Array.isArray(e.strokes))for(const t of e.strokes){const s=t,r=s.boundVariables&&s.boundVariables.color;r&&r.id&&i.push({layer:e.name,property:d.STROKE_COLOR,id:r.id})}}function S(e,i){if("effects"in e&&Array.isArray(e.effects)){for(const t of e.effects)if(t.boundVariables)for(const[s,r]of Object.entries(t.boundVariables)){const C=r;if(C.id){const o=`${(t.type||"").toLowerCase().replace(/_/g," ").replace(/\b\w/g,a=>a.toUpperCase())} ${s}`;i.push({layer:e.name,property:o,id:C.id})}}}}function P(e,i){const t=e.boundVariables;if(t){const r=new Set(["color","fills","fills.0"]);for(const[C,n]of Object.entries(t)){if(r.has(C)||C.startsWith("fills."))continue;const l=n;if(l.id){const o=y[C]||C;i.push({layer:e.name,property:o,id:l.id})}}}const s=["topLeftRadius","topRightRadius","bottomLeftRadius","bottomRightRadius","strokeTopWeight","strokeBottomWeight","strokeLeftWeight","strokeRightWeight"];for(const r of s)if(e[r]!==void 0&&t&&t[r]&&t[r].id){const C=y[r]||r;i.push({layer:e.name,property:C,id:t[r].id})}}function R(e,i){const t=e.boundVariables,s={fontSize:d.FONT_SIZE,fontWeight:d.FONT_WEIGHT,fontFamily:d.FONT_FAMILY,letterSpacing:d.LETTER_SPACING,lineHeight:d.LINE_HEIGHT,paragraphSpacing:d.PARAGRAPH_SPACING};if(t){for(const[n,l]of Object.entries(s))t[n]&&t[n].id&&(i.push({layer:e.name,property:l,id:t[n].id}),n==="fontSize"&&v.add(e.id));const r={},C=(n,l=[])=>{if(n&&typeof n=="object"){if(n.id&&typeof n.id=="string"){const o=l.join(".");if(o.startsWith("fills.")||o==="fills")return;r[o]||(r[o]=[]),r[o].push(n.id)}for(const o of Object.keys(n))o==="fills"||l.length>0&&l[0]==="fills"||C(n[o],[...l,o])}};C(t);for(const[n,l]of Object.entries(r)){let o=n;for(const[a,p]of Object.entries(s))if(n.includes(a)){o=p,a==="fontSize"&&v.add(e.id);break}o===n&&(o=y[n]||n);for(const a of l)i.push({layer:e.name,property:o,id:a})}}}function b(e){const i=[];return T(e,i),x(e,i),S(e,i),e.type==="TEXT"&&R(e,i),P(e,i),i}function H(e){const i=[],t=[...e];for(;t.length>0;){const s=t.pop();i.push(s),"children"in s&&Array.isArray(s.children)&&t.push(...s.children)}return i}function f(e){return Number(e.toFixed(2)).toString()}function E(e,i){if("fills"in e&&Array.isArray(e.fills))for(let t=0;t<e.fills.length;t++){const r=e.fills[t],C=r.boundVariables&&r.boundVariables.color;if((!C||!C.id)&&r.color){const n=r.color;i.push({layer:e.name,layerId:e.id,property:L.FILL,value:`rgb(${Math.round(n.r*255)}, ${Math.round(n.g*255)}, ${Math.round(n.b*255)})`})}}if("strokes"in e&&Array.isArray(e.strokes)){let t=!1,s;for(let r=0;r<e.strokes.length&&!t;r++){const n=e.strokes[r],l=n.boundVariables&&n.boundVariables.color;(!l||!l.id)&&n.color&&(t=!0,s=n.color)}t&&s&&(h(e.id,L.STROKE)||i.push({layer:e.name,layerId:e.id,property:L.STROKE,value:`rgb(${Math.round(s.r*255)}, ${Math.round(s.g*255)}, ${Math.round(s.b*255)})`}),e.strokes.length>1&&console.log(`${e.name} a ${e.strokes.length} contours, seul le premier non lié est affiché`))}}function A(e,i){const t=e.boundVariables,s=t&&t.opacity;if("opacity"in e&&typeof e.opacity=="number"&&(!s||!s.id)){const C=e.opacity;C<1&&(h(e.id,d.OPACITY)||i.push({layer:e.name,layerId:e.id,property:d.OPACITY,value:f(C)}))}if("strokeWeight"in e&&"strokes"in e&&Array.isArray(e.strokes)&&e.strokes.length>0){const n=e.strokeWeight,l=t&&t.strokeWeight,o=l&&l.id;typeof n=="number"&&n!==0&&!o&&!("strokeTopWeight"in e||"strokeBottomWeight"in e||"strokeLeftWeight"in e||"strokeRightWeight"in e)&&(h(e.id,d.STROKE_WEIGHT)||i.push({layer:e.name,layerId:e.id,property:d.STROKE_WEIGHT,value:f(n)})),["strokeTopWeight","strokeBottomWeight","strokeLeftWeight","strokeRightWeight"].forEach(a=>{if(a in e){const p=e[a],c=t&&t[a],u=c&&c.id;if(typeof p=="number"&&p!==0&&!u){const g=y[a]||a;h(e.id,g)||i.push({layer:e.name,layerId:e.id,property:g,value:f(p)})}}})}if("cornerRadius"in e){const C=e.cornerRadius,n=t&&t.cornerRadius,l=n&&n.id;typeof C=="number"&&C!==0&&!l&&!("topLeftRadius"in e||"topRightRadius"in e||"bottomLeftRadius"in e||"bottomRightRadius"in e)&&(h(e.id,d.CORNER_RADIUS)||i.push({layer:e.name,layerId:e.id,property:d.CORNER_RADIUS,value:f(C)}))}if(["topLeftRadius","topRightRadius","bottomLeftRadius","bottomRightRadius"].forEach(C=>{if(C in e){const n=e[C],l=t&&t[C],o=l&&l.id;if(typeof n=="number"&&n!==0&&!o){const a=y[C]||C;h(e.id,a)||i.push({layer:e.name,layerId:e.id,property:a,value:f(n)})}}}),e.type==="TEXT"){const C=e,n=[{key:"fontSize",displayName:d.FONT_SIZE,skipIfProcessed:!0},{key:"letterSpacing",displayName:d.LETTER_SPACING},{key:"lineHeight",displayName:d.LINE_HEIGHT},{key:"paragraphSpacing",displayName:d.PARAGRAPH_SPACING}];for(const{key:l,displayName:o,skipIfProcessed:a}of n){if(a&&l==="fontSize"&&v.has(C.id))continue;const p=C[l],c=t&&t[l],u=c&&c.id;typeof p=="number"&&p!==0&&!u&&!h(e.id,o)&&i.push({layer:e.name,layerId:e.id,property:o,value:f(p)})}}const r=[{key:"paddingLeft",displayName:d.PADDING_LEFT},{key:"paddingRight",displayName:d.PADDING_RIGHT},{key:"paddingTop",displayName:d.PADDING_TOP},{key:"paddingBottom",displayName:d.PADDING_BOTTOM},{key:"itemSpacing",displayName:d.ITEM_SPACING}];for(const{key:C,displayName:n}of r)if(C in e){const l=e[C],o=t&&t[C],a=o&&o.id;typeof l=="number"&&!a&&(l!==0||!["paddingLeft","paddingRight","paddingTop","paddingBottom","itemSpacing","gap"].includes(C))&&(console.log(`Found spacing property ${C} = ${l} on node ${e.name}`),h(e.id,n)||i.push({layer:e.name,layerId:e.id,property:n,value:f(l)}))}}function O(e,i){if("effects"in e&&Array.isArray(e.effects))for(const t of e.effects){const s=t.boundVariables||{},r=t.type||"",C=r.toLowerCase().replace(/_/g," ").replace(/\b\w/g,n=>n.toUpperCase());if(typeof t.radius=="number"&&(!s.radius||!s.radius.id)){const n=r.includes("BLUR")||r.includes("SHADOW")?"Blur":"Radius";i.push({layer:e.name,layerId:e.id,property:`${C} ${n}`,value:f(t.radius)})}if(r.includes("SHADOW")&&t.offset){const n=s.offset||{};typeof t.offset.x=="number"&&(!n.x||!n.x.id)&&i.push({layer:e.name,layerId:e.id,property:`${C} Offset X`,value:f(t.offset.x)}),typeof t.offset.y=="number"&&(!n.y||!n.y.id)&&i.push({layer:e.name,layerId:e.id,property:`${C} Offset Y`,value:f(t.offset.y)})}if(typeof t.spread=="number"&&(!s.spread||!s.spread.id)&&i.push({layer:e.name,layerId:e.id,property:`${C} Spread`,value:f(t.spread)}),t.color&&(!s.color||!s.color.id)){const n=t.color;i.push({layer:e.name,layerId:e.id,property:`${C} Color`,value:`rgb(${Math.round(n.r*255)}, ${Math.round(n.g*255)}, ${Math.round(n.b*255)})`})}}}function k(e){const i={};console.log(`Grouping ${e.length} usages by layer`);const t=new Map,s=[...e].sort((r,C)=>{const n=r.layer.localeCompare(C.layer);return n!==0?n:r.property.localeCompare(C.property)});for(const r of s){i[r.layer]||(i[r.layer]=[],t.set(r.layer,new Set));const C=t.get(r.layer),n=`${r.property}_${r.id||""}`,o=["paddingLeft","paddingRight","paddingTop","paddingBottom","itemSpacing","gap"].some(a=>r.property.includes(a));console.log(`Layer: ${r.layer}, Property: ${r.property}, isSpacing: ${o}, isDuplicate: ${C.has(n)}`),(!C.has(n)||o)&&(i[r.layer].push(r),C.add(n))}for(const[r,C]of Object.entries(i))console.log(`Layer ${r}: ${C.length} usages after grouping`);return i}async function M(){I();const e=await N(),i=figma.currentPage.selection,t=H(i),s=[],r=[];for(const o of t){const a=b(o);for(const{layer:p,property:c,id:u}of a){const g=e.get(u);if(!g){s.push({layer:p,layerId:o.id,property:c,name:u,type:"STRING",origin:"external",id:u});continue}s.push({layer:p,layerId:o.id,property:c,name:g.name,type:g.type,origin:g.origin,colorValue:g.colorValue,id:u})}E(o,r),A(o,r),O(o,r)}const C=new Map;s.forEach((o,a)=>{if(!C.has(o.layerId)){const p=figma.getNodeById(o.layerId);if(p){let c="UNKNOWN";if(p.type==="COMPONENT"||p.type==="INSTANCE")c=p.type;else if("layoutMode"in p){const u=p;u.layoutWrap==="WRAP"?c="AUTO_WRAP":u.layoutMode==="HORIZONTAL"?c="AUTO_HORIZONTAL":u.layoutMode==="VERTICAL"?c="AUTO_VERTICAL":c=p.type}else c=p.type;C.set(o.layerId,{id:o.layerId,name:o.layer,order:a,type:c})}}}),r.forEach((o,a)=>{if(!C.has(o.layerId)){const p=figma.getNodeById(o.layerId);if(p){let c="UNKNOWN";if(p.type==="COMPONENT"||p.type==="INSTANCE")c=p.type;else if("layoutMode"in p){const u=p;u.layoutWrap==="WRAP"?c="AUTO_WRAP":u.layoutMode==="HORIZONTAL"?c="AUTO_HORIZONTAL":u.layoutMode==="VERTICAL"?c="AUTO_VERTICAL":c=p.type}else c=p.type;C.set(o.layerId,{id:o.layerId,name:o.layer,order:s.length+a,type:c})}}});const n=k(s);console.log("Final usages count:",s.length),console.log("Layers with variables:",Object.keys(n).length),console.log("Unbound usages count:",r.length),console.log("Total nodes in layerInfoMap:",C.size);const l=s.length===0&&r.length===0;figma.ui.postMessage({byLayer:n,unbound:r,layerInfoMap:Object.fromEntries(C),noVariablesFound:l})}function B(){figma.showUI(V.replace("</head>",`<style>${w}</style></head>`),{width:300,height:400,title:"Variable Inspector"}),figma.ui.onmessage=e=>{if(e.type==="resize")figma.ui.resize(e.width,e.height);else if(e.type==="select-node"){const i=figma.getNodeById(e.nodeId);i&&(figma.currentPage.selection=[i],figma.viewport.scrollAndZoomIntoView([i]))}},figma.on("selectionchange",()=>{M().catch(e=>console.error("updateInspector error",e))}),M().catch(e=>console.error("updateInspector error",e))}B();
